<UserControl x:Class="SqlPad.DocumentPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sqlPad="clr-namespace:SqlPad"
             xmlns:commands="clr-namespace:SqlPad.Commands"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:configuration="clr-namespace:System.Configuration;assembly=System.Configuration"
             Loaded="PageLoadedHandler"
             mc:Ignorable="d"
             d:DesignHeight="320" d:DesignWidth="480" d:DataContext="{d:DesignInstance sqlPad:PageModel}">
	<UserControl.Resources>
		<sqlPad:ColorCodeToColorConverter x:Key="ColorCodeToColorConverter" />

		<ContextMenu x:Key="FoldingActionMenu">
			<ContextMenu.CommandBindings>
				<CommandBinding Command="commands:GenericCommands.ExpandAllFoldings" Executed="ExpandAllFoldingsExecutedHandler" CanExecute="ExpandAllFoldingsCanExecuteHandler" />
				<CommandBinding Command="commands:GenericCommands.CollapseAllFoldings" Executed="CollapseAllFoldingsExecutedHandler" CanExecute="CollapseAllFoldingsCanExecuteHandler" />
			</ContextMenu.CommandBindings>
			
			<MenuItem Header="_Expand all" Command="commands:GenericCommands.ExpandAllFoldings" />
			<MenuItem Header="_Collapse all" Command="commands:GenericCommands.CollapseAllFoldings" />
		</ContextMenu>

		<MenuItem x:Key="ColorPickerMenuItem">
			<MenuItem.Header>
				<StackPanel Orientation="Horizontal">
					<TextBlock Text="Tab Color " VerticalAlignment="Center" Margin="0,0,4,0" />
					<xctk:ColorPicker SelectedColor="{Binding HeaderBackgroundColorCode, Converter={StaticResource ColorCodeToColorConverter}}" AvailableColorsSortingMode="HueSaturationBrightness" ShowAvailableColors="False" ShowRecentColors="True" Width="100" />
				</StackPanel>
			</MenuItem.Header>
		</MenuItem>

		<ControlTemplate x:Key="EditableTabHeaderControlTemplate" TargetType="{x:Type sqlPad:EditableTabHeaderControl}">
			<StackPanel Orientation="Horizontal">
				<Grid>
					<TextBox x:Name="PART_TabHeader"
							 Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Mode=TwoWay}"
							 Visibility="Collapsed" />
					<TextBlock x:Name="PART_TextBlock"
					           Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Mode=TwoWay}" />
				</Grid>
				<TextBlock x:Name="PART_ModifiedNotification" Text="*" Visibility="Collapsed" />
				<TextBlock x:Name="PART_RunningNotification" Text=" (running)" Visibility="Collapsed" />
			</StackPanel>
			<ControlTemplate.Triggers>
				<Trigger Property="EditModeEnabled" Value="True">
					<Trigger.Setters>
						<Setter TargetName="PART_TabHeader" Property="Visibility" Value="Visible" />
						<Setter TargetName="PART_TextBlock" Property="Visibility" Value="Collapsed" />
					</Trigger.Setters>
				</Trigger>
				<Trigger Property="IsModified" Value="True">
					<Trigger.Setters>
						<Setter TargetName="PART_ModifiedNotification" Property="Visibility" Value="Visible" />
					</Trigger.Setters>
				</Trigger>
				<Trigger Property="IsRunning" Value="True">
					<Trigger.Setters>
						<Setter TargetName="PART_RunningNotification" Property="Visibility" Value="Visible" />
					</Trigger.Setters>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
	</UserControl.Resources>
	<Grid>
		<Grid.CommandBindings>
			<CommandBinding Command="commands:GenericCommands.CancelUserAction" Executed="CancelUserActionHandler" CanExecute="CanExecuteCancelUserActionHandler" />
			<CommandBinding Command="commands:GenericCommands.RefreshDatabaseModel" Executed="RefreshDatabaseModel" />
		</Grid.CommandBindings>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" x:Name="RowDefinitionEditor" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="24" />
		</Grid.RowDefinitions>

		<Grid Background="GhostWhite">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

			<StackPanel Grid.Row="0" HorizontalAlignment="Right" Orientation="Horizontal" Grid.Column="1">
				<Grid Visibility="{Binding ConnectProgressBarVisibility}" Margin="0,1,8,3">
					<ProgressBar Width="84" IsIndeterminate="True" />
					<TextBlock Text="Connecting..." HorizontalAlignment="Center" VerticalAlignment="Center" />
				</Grid>
				<TextBlock Text="Connection: " VerticalAlignment="Center" Margin="0,1,4,3" />
				<ComboBox x:Name="ComboBoxConnection" SelectedItem="{Binding Path=CurrentConnection}" Margin="0,1,0,3">
					<ComboBox.ItemTemplate>
						<DataTemplate DataType="configuration:ConnectionStringSettings">
							<TextBlock Text="{Binding Path=Name}" />
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>
				<TextBlock VerticalAlignment="Center" Visibility="{Binding SchemaComboBoxVisibility}" Margin="6,1,4,3">
					<Run Text="{Binding SchemaLabel, Mode=OneWay}"/><Run Text=": "/>
				</TextBlock>
				<ComboBox x:Name="ComboBoxSchema" ItemsSource="{Binding Path=Schemas}" SelectedItem="{Binding Path=CurrentSchema}" Visibility="{Binding SchemaComboBoxVisibility}" Margin="0,1,0,3" >
					<ComboBox.ItemTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding}" />
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>
			</StackPanel>
			<StackPanel Orientation="Horizontal" Background="DarkRed" Visibility="{Binding ReconnectOptionVisibility}" sqlPad:MarginSetter.Margin="2,2,2,2" Grid.Row="1" Grid.Column="1">
				<Button Content="Reconnect" Padding="6,2,6,2" Click="ButtonReconnectClickHandler" />
				<TextBlock Foreground="White" Text="{Binding ConnectionErrorMessage}" VerticalAlignment="Center" Padding="0,0,4,0" />
			</StackPanel>
		</Grid>

		<DockPanel Grid.Row="1" LastChildFill="True">
			<TextBlock Text="PRODUCTION" TextAlignment="Center" Foreground="White" Background="DarkRed" FontWeight="Bold" FontSize="14" Visibility="{Binding Path=ProductionLabelVisibility}" Height="21" DockPanel.Dock="Left">
				<TextBlock.LayoutTransform>
					<RotateTransform Angle="-90" />
				</TextBlock.LayoutTransform>
			</TextBlock>
			<Grid>
				<Grid.CommandBindings>
					<CommandBinding Command="commands:GenericCommands.ExecuteDatabaseCommand" Executed="ExecuteDatabaseCommandHandler" CanExecute="CanExecuteDatabaseCommandHandler" />
					<CommandBinding Command="commands:GenericCommands.ExecuteDatabaseCommandWithActualExecutionPlan" Executed="ExecuteDatabaseCommandWithActualExecutionPlanHandler" CanExecute="CanExecuteDatabaseCommandHandler" />
					<CommandBinding Command="commands:GenericCommands.ExplainPlan" Executed="ExecuteExplainPlanCommandHandler" CanExecute="CanExecuteDatabaseCommandHandler" />
				</Grid.CommandBindings>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="3*" x:Name="ColumnDefinitionEditor" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<sqlPad:SqlTextEditor x:Name="Editor"
				                      FontFamily="Consolas"
				                      ShowLineNumbers="True"
				                      TextChanged="EditorTextChangedHandler"
				                      ContextMenuOpening="ContextMenuOpeningHandler"
				                      MouseHover="MouseHoverHandler"
				                      PreviewKeyDown="EditorKeyDownHandler"
				                      PreviewKeyUp="EditorKeyUpHandler"
				                      MouseMove="MouseMoveHandler">
					<sqlPad:SqlTextEditor.CommandBindings>
						<CommandBinding Command="commands:GenericCommands.CreateNewPage" Executed="AddNewPage" />
						<CommandBinding Command="commands:GenericCommands.FindUsages" Executed="FindUsages" />
						<CommandBinding Command="commands:GenericCommands.FormatStatement" Executed="FormatStatement" />
						<CommandBinding Command="commands:GenericCommands.FormatStatementAsSingleLine" Executed="FormatStatementAsSingleLine" />
						<CommandBinding Command="commands:GenericCommands.ListContextActions" Executed="ListContextActions" />
						<CommandBinding Command="commands:GenericCommands.ListCodeGenerationItems" Executed="ListGenerateCodeItems" />
						<CommandBinding Command="commands:GenericCommands.NavigateToDefinitionRoot" Executed="NavigateToDefinition" />
						<CommandBinding Command="commands:GenericCommands.NavigateToNextUsage" Executed="NavigateToNextHighlightedUsage" />
						<CommandBinding Command="commands:GenericCommands.NavigateToPreviousUsage" Executed="NavigateToPreviousHighlightedUsage" />
						<CommandBinding Command="commands:GenericCommands.NavigateToNextError" Executed="NavigateToNextError" />
						<CommandBinding Command="commands:GenericCommands.NavigateToPreviousError" Executed="NavigateToPreviousError" />
						<CommandBinding Command="commands:GenericCommands.NavigateToQueryBlockRoot" Executed="NavigateToQueryBlockRoot" />
						<CommandBinding Command="commands:GenericCommands.Save" Executed="SaveCommandExecutedHandler" />
						<CommandBinding Command="commands:GenericCommands.ShowCodeCompletionOption" Executed="ShowCodeCompletionOptions" CanExecute="CanExecuteShowCodeCompletionHandler" />
						<CommandBinding Command="commands:GenericCommands.ShowFunctionOverload" Executed="ShowFunctionOverloads" />
						<CommandBinding Command="commands:GenericCommands.ZoomIn" Executed="EditorZoomInHandler" />
						<CommandBinding Command="commands:GenericCommands.ZoomOut" Executed="EditorZoomOutHandler" />
						<CommandBinding Command="commands:GenericCommands.Help" Executed="ShowHelpHandler" />
					</sqlPad:SqlTextEditor.CommandBindings>

					<sqlPad:SqlTextEditor.ContextMenu>
						<ContextMenu>
							<MenuItem Command="Undo" />
							<MenuItem Command="Redo" />
							<Separator/>
							<MenuItem Command="Cut" />
							<MenuItem Command="Copy" />
							<MenuItem Command="Paste" />
						</ContextMenu>
					</sqlPad:SqlTextEditor.ContextMenu>

					<sqlPad:SqlTextEditor.Style>
						<Style>
							<Style.Triggers>
								<DataTrigger Binding="{Binding ElementName=BindVariableList, Path=Visibility}" Value="0">
									<Setter Property="Grid.ColumnSpan" Value="1"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding ElementName=BindVariableList, Path=Visibility}" Value="2">
									<Setter Property="Grid.ColumnSpan" Value="3"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</sqlPad:SqlTextEditor.Style>
				</sqlPad:SqlTextEditor>
				<GridSplitter Grid.Column="1" Width="4" HorizontalAlignment="Center" ShowsPreview="True" VerticalAlignment="Stretch" Background="DimGray" Visibility="{Binding ElementName=BindVariableList, Path=Visibility}" />
				<ScrollViewer Grid.Column="2" x:Name="BindVariableList" Visibility="{Binding Path=BindVariableListVisibility}" VerticalScrollBarVisibility="Auto" DataContext="{Binding}">
					<StackPanel>
						<TextBlock Text="Bind Variables: " Padding="4,2,0,4" Margin="0,0,2,0" Background="Gray" />
						<ItemsControl MinWidth="160" ItemsSource="{Binding Path=BindVariables}">

							<ItemsControl.Resources>
								<DataTemplate x:Key="TextBoxTemplate" DataType="sqlPad:BindVariableModel">
									<TextBox Text="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}" GotFocus="BindVariableEditorGotFocusHandler" LostFocus="BindVariableEditorLostFocus" Tag="{Binding}" />
								</DataTemplate>
								<DataTemplate x:Key="DatePickerTemplate" DataType="sqlPad:BindVariableModel">
									<xctk:DateTimePicker Value="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}" Format="Custom" FormatString="{Binding ElementName=BindVariableList, Path=DataContext.(sqlPad:PageModel.DateTimeFormat)}" GotFocus="BindVariableEditorGotFocusHandler" LostFocus="BindVariableEditorLostFocus" Tag="{Binding}" />
								</DataTemplate>
							</ItemsControl.Resources>

							<ItemsControl.ItemTemplate>
								<DataTemplate DataType="sqlPad:BindVariableModel">
									<Grid sqlPad:MarginSetter.Margin="2,2,2,2">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="2*" />
											<ColumnDefinition Width="100" />
											<ColumnDefinition Width="3*" />
										</Grid.ColumnDefinitions>
										
										<TextBlock Text="{Binding Path=Name}" VerticalAlignment="Center" />
										<ComboBox Grid.Column="1" ItemsSource="{Binding Path=DataTypes}" SelectedValue="{Binding Path=DataType}" />
										<ContentControl Grid.Column="2" Content="{Binding}">
											<ContentControl.Style>
												<Style TargetType="ContentControl">
													<Style.Triggers>
														<DataTrigger Binding="{Binding Path=InputType}" Value="String">
															<Setter Property="ContentTemplate" Value="{StaticResource TextBoxTemplate}" />
														</DataTrigger>
														<DataTrigger Binding="{Binding Path=InputType}" Value="DateTime">
															<Setter Property="ContentTemplate" Value="{StaticResource DatePickerTemplate}" />
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</ContentControl.Style>
										</ContentControl>

									</Grid>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</StackPanel>
				</ScrollViewer>
			</Grid>
		</DockPanel>

		<GridSplitter Grid.Column="0" Grid.Row="2" Height="4" HorizontalAlignment="Stretch" ShowsPreview="True"
		              VerticalAlignment="Center" Background="DimGray" />

		<Grid Grid.Column="0" Grid.Row="3">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<ListView x:Name="OutputViewerList"
			          ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=sqlPad:DocumentPage}, Path=OutputViewers}"
			          IsSynchronizedWithCurrentItem="True" Grid.Column="0">
				<ListView.ItemTemplate>
					<DataTemplate>
						<StackPanel Orientation="Horizontal">
							<Button Width="12" Margin="0,0,6,0" Click="CloseOutputViewerClickHandler" CommandParameter="{Binding}">
								<Button.Template>
									<ControlTemplate TargetType="{x:Type Button}">
										<Path x:Name="Cross" Data="M0,0 L1,1 M0,1 L1,0" Stretch="Fill" Stroke="DimGray" StrokeThickness="2.5" Width="10" Height="10" />
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter TargetName="Cross" Property="Stroke" Value="Red" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Button.Template>
							</Button>
							<TextBlock Text="{Binding Title}" />
						</StackPanel>
					</DataTemplate>
				</ListView.ItemTemplate>
			</ListView>

			<ContentControl Content="{Binding ElementName=OutputViewerList, Path=SelectedItem}" Grid.Column="1"/>
		</Grid>
		
		<StatusBar x:Name="StatusBar" Grid.Row="4" Grid.Column="0">
			<StatusBar.ItemsPanel>
				<ItemsPanelTemplate>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="232" />
						</Grid.ColumnDefinitions>
					</Grid>
				</ItemsPanelTemplate>
			</StatusBar.ItemsPanel>
			<StatusBarItem Grid.Column="0">
				<StackPanel Orientation="Horizontal" sqlPad:MarginSetter.Margin="2,0,2,0">
					<TextBlock>
						<Run Text="Line: " />
						<Run Text="{Binding ElementName=Editor, Path=CurrentLine, Mode=OneWay}" />
						<Run Text=" Column: " />
						<Run Text="{Binding ElementName=Editor, Path=CurrentColumn, Mode=OneWay}" />
					</TextBlock>
					<TextBlock Visibility="{Binding ElementName=Editor, Path=CurrentSelectionLength, Mode=OneWay, Converter={StaticResource ObjectToVisibilityConverter}}">
						<Run Text=" Selection: " />
						<Run Text="{Binding ElementName=Editor, Path=CurrentSelectionLength, Mode=OneWay}" />
					</TextBlock>
				</StackPanel>
			</StatusBarItem>
			<Separator Grid.Column="1" />
			<StatusBarItem Grid.Column="2">
				<TextBlock Text="{Binding ElementName=OutputViewerList, Path=SelectedItem.(sqlPad:OutputViewer.ViewModel).ExecutionTimerMessage, Mode=OneWay}" />
			</StatusBarItem>
			<Separator Grid.Column="3" Visibility="{Binding ElementName=OutputViewerList, Path=SelectedItem.(sqlPad:OutputViewer.ViewModel).StatementExecutionInfoSeparatorVisibility}" />
			<StatusBarItem Grid.Column="4">
				<StackPanel Orientation="Horizontal" sqlPad:MarginSetter.Margin="2,0,2,0">
					<TextBlock Visibility="{Binding ElementName=OutputViewerList, Path=SelectedItem.(sqlPad:OutputViewer.ViewModel).AffectedRowCountVisibility}">
						<Run Text="{Binding ElementName=OutputViewerList, Path=SelectedItem.(sqlPad:OutputViewer.ViewModel).AffectedRowCount}" />
						<Run Text=" row(s) affected " />
					</TextBlock>
					<TextBlock Text="Command executed successfully " Visibility="{Binding ElementName=OutputViewerList, Path=SelectedItem.(sqlPad:OutputViewer.ViewModel).StatementExecutedSuccessfullyStatusMessageVisibility}" />
					<TextBlock Visibility="{Binding ElementName=OutputViewerList, Path=SelectedItem.(sqlPad:OutputViewer.ViewModel).GridRowInfoVisibility}">
						<Run Text="Row " />
						<Run Text="{Binding ElementName=OutputViewerList, Path=SelectedItem.(sqlPad:OutputViewer.ViewModel).CurrentRowIndex, Mode=OneWay}" />
						<Run Text=" of " />
						<Run Text="{Binding ElementName=OutputViewerList, Path=SelectedItem.(sqlPad:OutputViewer.ViewModel).ResultRowItems.Count, Mode=OneWay}" />
					</TextBlock>
					<TextBlock Text=" (more rows exist)" Visibility="{Binding ElementName=OutputViewerList, Path=SelectedItem.(sqlPad:OutputViewer.ViewModel).MoreRowsExistVisibility, Mode=OneWay}" />
				</StackPanel>
			</StatusBarItem>
			<StatusBarItem VerticalContentAlignment="Stretch" Grid.Column="5">
				<ProgressBar x:Name="ProgressBar" Minimum="0" Maximum="100" Width="220" />
			</StatusBarItem>
		</StatusBar>
	</Grid>
</UserControl>
