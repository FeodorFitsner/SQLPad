<Application x:Class="SqlPad.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sqlPad="clr-namespace:SqlPad"
             xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
		<sqlPad:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter" />
		<sqlPad:DateTimeLabelConverter x:Key="DateTimeConverter" />

		<SolidColorBrush x:Key="PopupBackgroundBrush" Color="#F1F2F7"/>
		<SolidColorBrush x:Key="PopupBorderBrush" Color="#767676"/>

		<Style x:Key="CellTextBoxStyleReadOnly">
			<Setter Property="TextBoxBase.IsReadOnly" Value="True" />
			<Setter Property="TextBoxBase.IsReadOnlyCaretVisible" Value="True" />
		</Style>
		<Style x:Key="CellStyleRightAlign">
			<Setter Property="Block.TextAlignment" Value="Right" />
		</Style>
		<Style x:Key="HeaderStyleRightAlign">
			<Setter Property="Control.HorizontalContentAlignment" Value="Right" />
		</Style>
		<Style x:Key="SingleRecordColumnName">
			<Setter Property="TextBlock.HorizontalAlignment" Value="Stretch" />
			<Setter Property="TextBlock.TextAlignment" Value="Left" />
			<Setter Property="TextBlock.VerticalAlignment" Value="Center" />
			<Setter Property="TextBlock.Margin" Value="2,0,2,0" />
		</Style>
		<Style x:Key="SingleRecordCell">
			<Setter Property="DataGridCell.Margin" Value="-1,-1,-1,-1" />
			<Setter Property="DataGridCell.Background" Value="#F1F2F7" />
			<Style.Triggers>
				<Trigger Property="DataGridCell.IsSelected" Value="True">
					<Setter Property="DataGridCell.Foreground" Value="Black" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="EditingCellTextBox" BasedOn="{StaticResource CellTextBoxStyleReadOnly}">
			<Setter Property="TextBox.HorizontalAlignment" Value="Stretch" />
			<Setter Property="TextBox.TextAlignment" Value="Left" />
			<Setter Property="TextBox.VerticalAlignment" Value="Center" />
		</Style>

		<Style x:Key="ColumnHeaderClickBubbleCancelation">
			<EventSetter Event="ButtonBase.Click" Handler="ClickBubblingCancelHandler" />
		</Style>

		<Style x:Key="DefaultDataGridRowHeight">
			<Style.Setters>
				<Setter Property="DataGridRow.Height" Value="21"/>
			</Style.Setters>
		</Style>

		<Style x:Key="ResultSetDataGrid">
			<Setter Property="DataGrid.EnableColumnVirtualization" Value="True" />
			<Setter Property="DataGrid.EnableRowVirtualization" Value="True" />
			<Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
			<Setter Property="DataGrid.AutoGenerateColumns" Value="False" />
			<Setter Property="DataGrid.CanUserSortColumns" Value="False" />
			<Setter Property="DataGrid.CanUserDeleteRows" Value="False" />
			<Setter Property="DataGrid.CanUserAddRows" Value="False" />
			<Setter Property="DataGrid.SelectionMode" Value="Extended" />
			<Setter Property="DataGrid.SelectionUnit" Value="CellOrRowHeader" />
			<Setter Property="DataGrid.HorizontalGridLinesBrush" Value="LightGray" />
			<Setter Property="DataGrid.VerticalGridLinesBrush" Value="LightGray" />
			<Setter Property="DataGrid.RowStyle" Value="{StaticResource DefaultDataGridRowHeight}" />
			<Setter Property="DataGrid.HeadersVisibility" Value="Column" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Columns.Count}" Value="0">
					<Setter Property="DataGrid.HeadersVisibility" Value="None" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<TextDecoration x:Key="WaveErrorUnderline">
			<TextDecoration.Pen>
				<Pen Thickness="6">
					<Pen.Brush>
						<VisualBrush TileMode="Tile" Viewbox="0,-2,6,5" ViewboxUnits="Absolute" Viewport="0,-1,6,3" ViewportUnits="Absolute">
							<VisualBrush.Visual>
								<Path Data="M 0,1 L 1,2 2,2 4,0, 5,0 6,1" Stroke="Red" StrokeThickness="1.5"/>
							</VisualBrush.Visual>
						</VisualBrush>
					</Pen.Brush>
				</Pen>
			</TextDecoration.Pen>
		</TextDecoration>

		<!--<TextDecoration x:Key="WaveErrorUnderline">
			<TextDecoration.Pen>
				<Pen Thickness="6">
					<Pen.Brush>
						<VisualBrush TileMode="Tile" Viewbox="0,-2,6,5" ViewboxUnits="Absolute" Viewport="0,-1,6,3" ViewportUnits="Absolute">
							<VisualBrush.Visual>
								<Image Source="c:\Users\Jan\Desktop\WaveLine.png" />
							</VisualBrush.Visual>
						</VisualBrush>
					</Pen.Brush>
				</Pen>
			</TextDecoration.Pen>
		</TextDecoration>-->

		<TextDecoration x:Key="WaveWarningUnderline">
			<TextDecoration.Pen>
				<Pen Thickness="6">
					<Pen.Brush>
						<VisualBrush TileMode="Tile" Viewbox="0,-2,6,5" ViewboxUnits="Absolute" Viewport="0,-1,6,3" ViewportUnits="Absolute">
							<VisualBrush.Visual>
								<Path Data="M 0,1 L 1,2 2,2 4,0, 5,0 6,1" Stroke="LightSeaGreen" StrokeThickness="1.5"/>
							</VisualBrush.Visual>
						</VisualBrush>
					</Pen.Brush>
				</Pen>
			</TextDecoration.Pen>
		</TextDecoration>

		<TextDecoration x:Key="BoxedText" PenThicknessUnit="FontRecommended">
			<TextDecoration.Pen>
				<Pen Thickness="1">
					<Pen.Brush>
						<VisualBrush TileMode="None" Viewbox="0,0,1,1" ViewboxUnits="RelativeToBoundingBox" Viewport="0,0,1,1" ViewportUnits="RelativeToBoundingBox" Stretch="Fill">
							<VisualBrush.Visual>
								<Rectangle Stroke="Red" Fill="Transparent" StrokeThickness="1"></Rectangle>
							</VisualBrush.Visual>
						</VisualBrush>
					</Pen.Brush>
				</Pen>
			</TextDecoration.Pen>
		</TextDecoration>

		<ControlTemplate x:Key="TabItemControlTemplate" TargetType="{x:Type TabItem}">
			<Grid x:Name="templateRoot" SnapsToDevicePixels="True">
				<Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
					<Border x:Name="innerBorder" BorderBrush="#FFACACAC" BorderThickness="1,1,1,0" Margin="-1" Opacity="0"/>
				</Border>
				<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
			</Grid>
			<ControlTemplate.Triggers>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
						<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
					</MultiDataTrigger.Conditions>
					<Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
					<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
					<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
				</MultiDataTrigger>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
						<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
					</MultiDataTrigger.Conditions>
					<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
					<Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
					<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
					<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
				</MultiDataTrigger>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
						<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
					</MultiDataTrigger.Conditions>
					<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
					<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
				</MultiDataTrigger>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
						<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
					</MultiDataTrigger.Conditions>
					<Setter Property="Panel.ZIndex" Value="1"/>
					<Setter Property="Margin" Value="-2,-2,-2,0"/>
					<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
					<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
					<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
				</MultiDataTrigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<Style x:Key="SearchTextBoxStyle" TargetType="{x:Type sqlPad:SearchTextBox}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Padding" Value="3"/>
			<Setter Property="AllowDrop" Value="True"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="WatermarkTemplate">
				<Setter.Value>
					<DataTemplate>
						<ContentControl Content="{Binding}" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Focusable="False" Margin="2,0,0,0" />
					</DataTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type sqlPad:SearchTextBox}">
						<Grid>
							<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0"/>
							<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							<ContentPresenter x:Name="PART_WatermarkHost" ContentTemplate="{TemplateBinding WatermarkTemplate}" Content="{TemplateBinding Watermark}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Text" Value=""/>
								</MultiTrigger.Conditions>
								<Setter Property="Visibility" TargetName="PART_WatermarkHost" Value="Visible"/>
							</MultiTrigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlMouseOverBorderKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>
							</Trigger>
							<Trigger Property="IsKeyboardFocusWithin" Value="True">
								<Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Application.Resources>
</Application>
