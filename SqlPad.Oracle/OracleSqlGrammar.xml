<?xml version="1.0" encoding="utf-8" ?>
<SqlGrammar xmlns="http://husqvik.com/SqlPad/2014/02"
            Dbms="Oracle" Version="12.1.0.1.0">
  <StartSymbols>
    <StartSymbol Id="SelectStatement" />
    <StartSymbol Id="DeleteStatement" />
    <StartSymbol Id="UpdateStatement" />
    <StartSymbol Id="CommitStatement" />
    <StartSymbol Id="SetTransactionStatement" />
    <!--<StartSymbol Id="InsertStatement" />
    <StartSymbol Id="CreateStatement" />
    <StartSymbol Id="DropStatement" />
    <StartSymbol Id="AlterStatement" />
    <StartSymbol Id="RenameStatement" />-->
  </StartSymbols>

  <Terminators>
    <Terminator Value =";" />
    <!--<Terminator RegexValue="TODO" />-->
  </Terminators>
    
  <Rules>
    <!-- Commit statement -->
    <Rule StartingNonTerminal="CommitStatement">
      <Sequences>
        <Sequence>
          <Terminal Id="Commit" />
          <Terminal Id="Work" IsOptional="true" />
          <NonTerminal Id="CommitCommentOrWriteOrForce" IsOptional="true" />
          <Terminal Id="Semicolon" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="CommitCommentOrWriteOrForce">
      <Sequences>
        <Sequence>
          <Terminal Id="Force" />
          <Terminal Id="StringLiteral" />
          <NonTerminal Id="CommitSetScn" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="CommitComment" />
          <NonTerminal Id="CommitWriteClause" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="CommitWriteClause" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ImmediateOrBatch">
      <Sequences>
        <Sequence>
          <Terminal Id="Immediate" />
        </Sequence>
        <Sequence>
          <Terminal Id="Batch" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="WaitOrNowait">
      <Sequences>
        <Sequence>
          <Terminal Id="Nowait" />
        </Sequence>
        <Sequence>
          <Terminal Id="Wait" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="CommitWriteClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Write" />
          <NonTerminal Id="ImmediateOrBatch" IsOptional="true" />
          <NonTerminal Id="WaitOrNowait" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="CommitComment">
      <Sequences>
        <Sequence>
          <Terminal Id="Comment" />
          <Terminal Id="StringLiteral" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="CommitSetScn">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <Terminal Id="IntegerLiteral" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- SET TRANSACTION statement -->
    <Rule StartingNonTerminal="SetTransactionStatement">
      <Sequences>
        <Sequence>
          <Terminal Id="Set" />
          <Terminal Id="Transaction" />
          <NonTerminal Id="TransactionModeOrIsolationLevelOrRollbackSegment" IsOptional="true" />
          <NonTerminal Id="TransactionNameClause" IsOptional="true" />
          <Terminal Id="Semicolon" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="TransactionNameClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Name" />
          <Terminal Id="StringLiteral" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="TransactionModeOrIsolationLevelOrRollbackSegment">
      <Sequences>
        <Sequence>
          <Terminal Id="Read" />
          <NonTerminal Id="TransactionReadOnlyOrReadWrite" />
        </Sequence>
        <Sequence>
          <Terminal Id="Isolation" />
          <Terminal Id="Level" />
          <NonTerminal Id="SerializableOrReadCommitted" />
        </Sequence>
        <Sequence>
          <Terminal Id="Use" />
          <Terminal Id="Rollback" />
          <Terminal Id="Segment" />
          <Terminal Id="Identifier" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="TransactionReadOnlyOrReadWrite">
      <Sequences>
        <Sequence>
          <Terminal Id="Only" />
        </Sequence>
        <Sequence>
          <Terminal Id="Write" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="SerializableOrReadCommitted">
      <Sequences>
        <Sequence>
          <Terminal Id="Serializable" />
        </Sequence>
        <Sequence>
          <Terminal Id="Read" />
          <Terminal Id="Committed" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- DELETE statement -->
    <Rule StartingNonTerminal="DeleteStatement">
      <Sequences>
        <Sequence>
          <Terminal Id="Delete" />
          <Terminal Id="From" IsOptional="true" />
          <NonTerminal Id="TableReference" />
          <NonTerminal Id="WhereClause" IsOptional="true" />
          <NonTerminal Id="ReturningClause" IsOptional="true" />
          <NonTerminal Id="ErrorLoggingClause" IsOptional="true" />
          <Terminal Id="Semicolon" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="ReturningClause">
      <Sequences>
        <Sequence>
          <NonTerminal Id="ReturnOrReturning" />
          <NonTerminal Id="ExpressionList" />
          <Terminal Id="Into" />
          <NonTerminal Id="BindVariableExpression" />
          <NonTerminal Id="BindVariableExpressionCommaChainedList" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="BindVariableExpressionCommaChainedList">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="BindVariableExpression" />
          <NonTerminal Id="BindVariableExpressionCommaChainedList" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ReturnOrReturning">
      <Sequences>
        <Sequence>
          <Terminal Id="Return" />
        </Sequence>
        <Sequence>
          <Terminal Id="Returning" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ErrorLoggingClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Log" />
          <Terminal Id="Errors" />
          <NonTerminal Id="ErrorLoggingIntoObject" IsOptional="true" />
          <NonTerminal Id="ParenthesisEnclosedExpression" IsOptional="true" />
          <NonTerminal Id="ErrorLoggingRejectLimit" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ErrorLoggingIntoObject">
      <Sequences>
        <Sequence>
          <Terminal Id="Into" />
          <NonTerminal Id="SchemaPrefix" IsOptional="true" />
          <Terminal Id="ObjectIdentifier" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ErrorLoggingRejectLimit">
      <Sequences>
        <Sequence>
          <Terminal Id="Reject" />
          <Terminal Id="Limit" />
          <NonTerminal Id="UnlimitedOrIntegerLiteral" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="UnlimitedOrIntegerLiteral">
      <Sequences>
        <Sequence>
          <Terminal Id="Unlimited" />
        </Sequence>
        <Sequence>
          <Terminal Id="IntegerLiteral" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ParenthesisEnclosedExpression">
      <Sequences>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="Expression" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- UPDATE statement -->
    <Rule StartingNonTerminal="UpdateStatement">
      <Sequences>
        <Sequence>
          <Terminal Id="Update" />
          <NonTerminal Id="TableReference" />
          <NonTerminal Id="UpdateSetClause" />
          <NonTerminal Id="WhereClause" IsOptional="true" />
          <NonTerminal Id="ReturningClause" IsOptional="true" />
          <NonTerminal Id="ErrorLoggingClause" IsOptional="true" />
          <Terminal Id="Semicolon" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="UpdateSetClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Set" />
          <NonTerminal Id="UpdateSetColumnsOrObjectValue" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="UpdateSetColumnsOrObjectValue">
      <Sequences>
        <Sequence>
          <NonTerminal Id="UpdateSetColumnOrColumnList" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="SetObjectValueEqualsExpressionOrNestedQuery" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="UpdateSetColumnOrColumnList">
      <Sequences>
        <Sequence>
          <NonTerminal Id="SetColumnEqualsExpressionOrNestedQueryOrDefaultValue" />
          <NonTerminal Id="UpdateSetColumnOrColumnListChainedList" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="SetColumnListEqualsNestedQuery" />
          <NonTerminal Id="UpdateSetColumnOrColumnListChainedList" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="UpdateSetColumnOrColumnListChainedList">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="UpdateSetColumnOrColumnList" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="SetColumnListEqualsNestedQuery">
      <Sequences>
        <Sequence>
          <NonTerminal Id="ParenthesisEnclosedColumnIdentifierList" />
          <Terminal Id="MathEquals" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="NestedQuery" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="SetColumnEqualsExpressionOrNestedQueryOrDefaultValue">
      <Sequences>
        <Sequence>
          <Terminal Id="Identifier" />
          <Terminal Id="MathEquals" />
          <NonTerminal Id="ExpressionOrNestedQueryOrDefaultValue" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ExpressionOrNestedQuery">
      <Sequences>
        <Sequence>
          <NonTerminal Id="Expression" />
        </Sequence>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="NestedQuery" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ExpressionOrNestedQueryOrDefaultValue">
      <Sequences>
        <Sequence>
          <NonTerminal Id="ExpressionOrNestedQuery" />
        </Sequence>
        <Sequence>
          <Terminal Id="Default" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="SetObjectValueEqualsExpressionOrNestedQuery">
      <Sequences>
        <Sequence>
          <Terminal Id="Value" />
          <Terminal Id="LeftParenthesis" />
          <Terminal Id="Alias" />
          <Terminal Id="RightParenthesis" />
          <Terminal Id="MathEquals" />
          <NonTerminal Id="ExpressionOrNestedQuery" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- MERGE statement -->
    <Rule StartingNonTerminal="MergeStatements">
      <Sequences>
        <Sequence>
          <Terminal Id="Merge" />
          <Terminal Id="Into" />
          <NonTerminal Id="SchemaPrefix" IsOptional="true" />
          <Terminal Id="ObjectIdentifier" />
          <Terminal Id="Alias" IsOptional="true" />
          <Terminal Id="Using" />
          <!-- TODO: aliased table, view or subquery -->
          <Terminal Id="On" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="Condition" />
          <Terminal Id="RightParenthesis" />
          <NonTerminal Id="MergeUpdateInsertClause" />
          <NonTerminal Id="ErrorLoggingClause" />
          <NonTerminal Id="Semicolon" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="MergeUpdateInsertClause">
      <Sequences>
        <Sequence>
          <NonTerminal Id="MergeUpdateClause" />
          <NonTerminal Id="MergeInsertClause" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="MergeInsertClause" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="MergeUpdateClause">
      <Sequences>
        <Sequence>
          <Terminal Id="When" />
          <Terminal Id="Matched" />
          <Terminal Id="Then" />
          <Terminal Id="Update" />
          <Terminal Id="Set" />
          <NonTerminal Id="MergeSetColumnEqualsExpressionOrOrDefaultValueList" />
          <NonTerminal Id="WhereClause" IsOptional="true" />
          <NonTerminal Id="MergeDeleteClause" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="MergeSetColumnEqualsExpressionOrOrDefaultValueList">
      <Sequences>
        <Sequence>
          <Terminal Id="Identifier" />
          <Terminal Id="MathEquals" />
          <NonTerminal Id="ExpressionOrOrDefaultValue" />
          <NonTerminal Id="MergeSetColumnEqualsExpressionOrOrDefaultValueCommaChainedList" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="MergeSetColumnEqualsExpressionOrOrDefaultValueCommaChainedList">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="MergeSetColumnEqualsExpressionOrOrDefaultValueList" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ExpressionOrOrDefaultValue">
      <Sequences>
        <Sequence>
          <NonTerminal Id="Expression" />
        </Sequence>
        <Sequence>
          <Terminal Id="Default" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="MergeDeleteClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Delete" />
          <NonTerminal Id="WhereClause" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="MergeInsertClause">
      <Sequences>
        <Sequence>
          <Terminal Id="When" />
          <Terminal Id="Not" />
          <Terminal Id="Matched" />
          <Terminal Id="Then" />
          <Terminal Id="Insert" />
          <NonTerminal Id="ParenthesisEnclosedColumnIdentifierList" IsOptional="true" />
          <Terminal Id="Values" />
          <NonTerminal Id="ParenthesisEnclosedMergeInsertValuesExpressionOrOrDefaultValueList" />
          <NonTerminal Id="WhereClause" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ParenthesisEnclosedMergeInsertValuesExpressionOrOrDefaultValueList">
      <Sequences>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="MergeInsertValuesExpressionOrOrDefaultValueList" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="MergeInsertValuesExpressionOrOrDefaultValueList">
      <Sequences>
        <Sequence>
          <NonTerminal Id="ExpressionOrOrDefaultValue" />
          <NonTerminal Id="MergeSetColumnEqualsExpressionOrOrDefaultValueCommaChainedList" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="MergeInsertValuesExpressionOrOrDefaultValueCommaChainedList">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="MergeInsertValuesExpressionOrOrDefaultValueList" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- SELECT statement -->
    <Rule StartingNonTerminal="SelectStatement">
      <Sequences>
        <Sequence>
          <NonTerminal Id="NestedQuery" />
          <NonTerminal Id="ForUpdateClause" IsOptional="true" />
          <Terminal Id="Semicolon" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="NestedQuery">
      <Sequences>
        <Sequence>
          <NonTerminal Id="SubqueryFactoringClause" IsOptional="true"/>
          <NonTerminal Id="Subquery" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="QueryBlock">
      <Sequences>
        <Sequence>
          <Terminal Id="Select" />
          <NonTerminal Id="DistinctModifier" IsOptional="true" />
          <NonTerminal Id="SelectList" />
          <Terminal Id="From" />
          <NonTerminal Id="FromClause" />
          <NonTerminal Id="WhereClause" IsOptional="true" />
          <NonTerminal Id="HierarchicalQueryClause" IsOptional="true" />
          <NonTerminal Id="GroupByClause" IsOptional="true" />
          <!--<NonTerminal Id="ModelClause" IsOptional="true" />-->
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="DistinctModifier">
      <Sequences>
        <Sequence>
          <Terminal Id="All" />
        </Sequence>
        <Sequence>
          <Terminal Id="Distinct" />
        </Sequence>
        <Sequence>
          <Terminal Id="Unique" />
        </Sequence>
      </Sequences>
    </Rule>
  
    <Rule StartingNonTerminal="SelectList">
      <Sequences>
        <Sequence Comment="*">
          <Terminal Id="Asterisk" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="AliasedExpressionOrAllTableColumns" />
          <NonTerminal Id="SelectExpressionExpressionChainedList" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="AliasedExpressionOrAllTableColumns">
      <Sequences>
        <Sequence Comment="(Schema.)Object.*">
          <NonTerminal Id="Prefix" />
          <Terminal Id="Asterisk" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="AliasedExpression" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="SelectExpressionExpressionChainedList">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="AliasedExpressionOrAllTableColumns" />
          <NonTerminal Id="SelectExpressionExpressionChainedList" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="ExpressionCommaChainedList">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="ExpressionList" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="ExpressionList">
      <Sequences>
        <Sequence>
          <NonTerminal Id="Expression" />
          <NonTerminal Id="ExpressionCommaChainedList" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="ParenthesisEnclosedExpressionList">
      <Sequences>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="ExpressionList" IsOptional="true" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ExpressionMathOperatorChainedList">
      <Sequences>
        <Sequence>
          <NonTerminal Id="MathOperator" />
          <NonTerminal Id="Expression" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="AliasedExpression">
      <Sequences>
        <Sequence>
          <NonTerminal Id="Expression" />
          <NonTerminal Id="ColumnAlias" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="ColumnAlias">
      <Sequences>
        <Sequence>
          <Terminal Id="As" />
          <Terminal Id="Alias" />
        </Sequence>
        <Sequence>
          <Terminal Id="Alias" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="BindVariableExpression">
      <Sequences>
        <Sequence>
          <Terminal Id="Colon" />
          <Terminal Id="BindVariableIdentifier" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="Expression">
      <Sequences>
        <Sequence>
          <Terminal Id="RowNumberPseudoColumn" />
          <NonTerminal Id="ExpressionMathOperatorChainedList" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="Level" />
          <NonTerminal Id="ExpressionMathOperatorChainedList" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="CaseExpression" />
          <NonTerminal Id="ExpressionMathOperatorChainedList" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="StringLiteral" />
          <NonTerminal Id="ExpressionMathOperatorChainedList" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="NumberLiteral" />
          <NonTerminal Id="ExpressionMathOperatorChainedList" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="Null" />
          <NonTerminal Id="ExpressionMathOperatorChainedList" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="Expression" />
          <Terminal Id="RightParenthesis" />
          <NonTerminal Id="ExpressionMathOperatorChainedList" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="NestedQuery" />
          <Terminal Id="RightParenthesis" />
          <NonTerminal Id="ExpressionMathOperatorChainedList" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="MathPlus" />
          <NonTerminal Id="Expression" />
        </Sequence>
        <Sequence>
          <Terminal Id="MathMinus" />
          <NonTerminal Id="Expression" />
        </Sequence>
        <Sequence>
          <Terminal Id="Cast" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="ExpressionOrMultiset" />
          <Terminal Id="As" />
          <NonTerminal Id="DataType" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
        <Sequence>
          <Terminal Id="Count" />
          <Terminal Id="LeftParenthesis" />
          <Terminal Id="All" IsOptional="true" />
          <Terminal Id="Asterisk" />
          <Terminal Id="RightParenthesis" />
          <NonTerminal Id="AnalyticClause" IsOptional="true" />
        </Sequence>
        
        <!-- TODO: Solve TREAT function -->
        <!--<Sequence>
          <Terminal Id="Treat" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="Expression" />
          <Terminal Id="As" />
          <Terminal Id="Ref" IsOptional="true" />
          <NonTerminal Id="SchemaPrefix" IsOptional="true" />
          <Terminal Id="DataTypeName" />
          <Terminal Id="RightParenthesis" />
        </Sequence>-->

        <Sequence>
          <NonTerminal Id="BindVariableExpression" />
          <NonTerminal Id="ExpressionMathOperatorChainedList" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="Timestamp" />
          <Terminal Id="StringLiteral" />
          <NonTerminal Id="ExpressionMathOperatorChainedList" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="PrefixedColumnReference" />
          <NonTerminal Id="ExpressionMathOperatorChainedList" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="Date" />
          <Terminal Id="StringLiteral" />
          <NonTerminal Id="ExpressionMathOperatorChainedList" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="ExpressionOrMultiset">
      <Sequences>
        <Sequence>
          <Terminal Id="Multiset" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="NestedQuery" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="Expression" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="DataType">
      <Sequences>
        <Sequence>
          <NonTerminal Id="SchemaPrefix" IsOptional="true" />
          <Terminal Id="DataTypeName" />
          <NonTerminal Id="DataTypePrecisionAndScale" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="DataTypePrecisionAndScale">
      <Sequences>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="IntegerOrAsterisk" />
          <NonTerminal Id="Scale" IsOptional="true" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="IntegerOrAsterisk">
      <Sequences>
        <Sequence>
          <Terminal Id="IntegerLiteral" />
        </Sequence>
        <Sequence>
          <Terminal Id="Asterisk" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="Scale">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <Terminal Id="IntegerLiteral" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="PrefixedColumnReference">
      <Sequences>
        <Sequence>
          <NonTerminal Id="Prefix" IsOptional="true" />
          <NonTerminal Id="ColumnReference" />
        </Sequence>
      </Sequences>
    </Rule>

    <!--Function call -->
    <Rule StartingNonTerminal="ParenthesisEnclosedAggregationFunctionParameters">
      <Sequences>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="FunctionParameters" IsOptional="true" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ParenthesisEnclosedFunctionParameters">
      <Sequences>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="ExpressionList" IsOptional="true" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="FunctionParameters">
      <Sequences>
        <Sequence>
          <NonTerminal Id="DistinctModifier" IsOptional="true" />
          <NonTerminal Id="ExpressionList" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="ColumnReference">
      <Sequences>
        <Sequence>
          <Terminal Id="RowIdPseudoColumn" />
          <NonTerminal Id="OuterJoinOld" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="SequenceCurrentValue" />
          <NonTerminal Id="DatabaseLink" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="SequenceNextValue" />
          <NonTerminal Id="DatabaseLink" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="Identifier" />
          <NonTerminal Id="OuterJoinOld" />
        </Sequence>
        <Sequence>
          <Terminal Id="Identifier" />
          <!-- Function call -->
          <NonTerminal Id="DatabaseLink" IsOptional="true" />
          <NonTerminal Id="ParenthesisEnclosedAggregationFunctionParameters" IsOptional="true" />
          <NonTerminal Id="AnalyticClause" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="MathOperator">
      <Sequences>
        <Sequence>
          <Terminal Id="MathPlus" />
        </Sequence>
        <Sequence>
          <Terminal Id="MathMinus" />
        </Sequence>
        <Sequence>
          <Terminal Id="MathFactor" />
        </Sequence>
        <Sequence>
          <Terminal Id="MathDivide" />
        </Sequence>
        <Sequence>
          <Terminal Id="OperatorConcatenation" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="Condition">
      <Sequences>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="Condition" />
          <Terminal Id="RightParenthesis" />
          <NonTerminal Id="ChainedCondition" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="Exists" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="NestedQuery" />
          <Terminal Id="RightParenthesis" />
          <NonTerminal Id="ChainedCondition" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="Not" />
          <NonTerminal Id="Condition" />
          <NonTerminal Id="ChainedCondition" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="Expression" />
          <NonTerminal Id="LikeOperator" />
          <NonTerminal Id="Expression" />
          <NonTerminal Id="EscapeClause" IsOptional="true" />
          <NonTerminal Id="ChainedCondition" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="Expression" />
          <NonTerminal Id="RelationalOperator" />
          <NonTerminal Id="Expression" />
          <NonTerminal Id="ChainedCondition" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="Expression" />
          <NonTerminal Id="RelationalOperator" />
          <NonTerminal Id="SetQualifier" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="ExpressionListOrNestedQuery" />
          <Terminal Id="RightParenthesis" />
          <NonTerminal Id="ChainedCondition" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="Expression" />
          <Terminal Id="Is" />
          <Terminal Id="Not" IsOptional="true" />
          <NonTerminal Id="NullNaNOrInfinite" />
          <NonTerminal Id="ChainedCondition" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="Expression" />
          <Terminal Id="Not" IsOptional="true" />
          <Terminal Id="In" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="ExpressionListOrNestedQuery" />
          <Terminal Id="RightParenthesis" />
          <NonTerminal Id="ChainedCondition" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="Expression" />
          <Terminal Id="Between" />
          <NonTerminal Id="Expression" />
          <Terminal Id="And" />
          <NonTerminal Id="Expression" />
          <NonTerminal Id="ChainedCondition" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="ExpressionList" />
          <Terminal Id="RightParenthesis" />
          <NonTerminal Id="RelationalEquiOperator" />
          <NonTerminal Id="SetQualifier" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="GroupingExpressionListOrNestedQuery" />
          <Terminal Id="RightParenthesis" />
          <NonTerminal Id="ChainedCondition" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ExpressionListOrNestedQuery">
      <Sequences>
        <Sequence>
          <NonTerminal Id="ExpressionList" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="NestedQuery" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="GroupingExpressionListOrNestedQuery">
      <Sequences>
        <Sequence>
          <NonTerminal Id="GroupingExpressionListWithMandatoryExpressions" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="NestedQuery" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="GroupingExpressionListWithMandatoryExpressions">
      <Sequences>
        <Sequence>
          <NonTerminal Id="ParenthesisEnclosedExpressionListWithMandatoryExpressions" />
          <NonTerminal Id="GroupingExpressionListWithMandatoryExpressionsChained" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="ExpressionList" />
          <NonTerminal Id="GroupingExpressionListWithMandatoryExpressionsChained" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ParenthesisEnclosedExpressionListWithMandatoryExpressions">
      <Sequences>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="ExpressionList" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="GroupingExpressionListWithMandatoryExpressionsChained">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="GroupingExpressionListWithMandatoryExpressions" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="NullNaNOrInfinite">
      <Sequences>
        <Sequence>
          <Terminal Id="Null" />
        </Sequence>
        <Sequence>
          <Terminal Id="MathNotANumber" />
        </Sequence>
        <Sequence>
          <Terminal Id="MathInfinite" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ChainedCondition">
      <Sequences>
        <Sequence>
          <NonTerminal Id="LogicalOperator" />
          <NonTerminal Id="Condition" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="LogicalOperator">
      <Sequences>
        <Sequence>
          <Terminal Id="And" />
        </Sequence>
        <Sequence>
          <Terminal Id="Or" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="LikeOperator">
      <Sequences>
        <Sequence>
          <Terminal Id="Like" />
        </Sequence>
        <Sequence>
          <Terminal Id="LikeUcs2" />
        </Sequence>
        <Sequence>
          <Terminal Id="LikeUcs4" />
        </Sequence>
        <Sequence>
          <Terminal Id="LikeUnicode" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="EscapeClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Escape" />
          <Terminal Id="StringLiteral" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="RelationalOperator">
      <Sequences>
        <Sequence>
          <NonTerminal Id="RelationalEquiOperator" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="RelationalNonEquiOperator" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="RelationalEquiOperator">
      <Sequences>
        <Sequence>
          <Terminal Id="MathEquals" />
        </Sequence>
        <Sequence>
          <Terminal Id="MathNotEqualsSql" />
        </Sequence>
        <Sequence>
          <Terminal Id="MathNotEqualsC" />
        </Sequence>
        <Sequence>
          <Terminal Id="MathNotEqualsCircumflex" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="RelationalNonEquiOperator">
      <Sequences>
        <Sequence>
          <Terminal Id="MathGreatherThan" />
        </Sequence>
        <Sequence>
          <Terminal Id="MathLessThan" />
        </Sequence>
        <Sequence>
          <Terminal Id="MathGreatherThanOrEquals" />
        </Sequence>
        <Sequence>
          <Terminal Id="MathLessThanOrEquals" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- CASE expression -->
    <Rule StartingNonTerminal="CaseExpression">
      <Sequences>
        <Sequence>
          <Terminal Id="Case" />
          <NonTerminal Id="SearchedCaseExpressionBranch" />
          <NonTerminal Id="CaseExpressionElseBranch" IsOptional="true" />
          <Terminal Id="End" />
        </Sequence>
        <Sequence>
          <Terminal Id="Case" />
          <NonTerminal Id="Expression" />
          <NonTerminal Id="SimpleCaseExpressionBranch" />
          <NonTerminal Id="CaseExpressionElseBranch" IsOptional="true" />
          <Terminal Id="End" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="SearchedCaseExpressionBranch">
      <Sequences>
        <Sequence>
          <Terminal Id="When" />
          <NonTerminal Id="Condition" />
          <Terminal Id="Then" />
          <NonTerminal Id="Expression" />
          <NonTerminal Id="SearchedCaseExpressionBranch" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="SimpleCaseExpressionBranch">
      <Sequences>
        <Sequence>
          <Terminal Id="When" />
          <NonTerminal Id="Expression" />
          <Terminal Id="Then" />
          <NonTerminal Id="Expression" />
          <NonTerminal Id="SimpleCaseExpressionBranch" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="CaseExpressionElseBranch">
      <Sequences>
        <Sequence>
          <Terminal Id="Else" />
          <NonTerminal Id="Expression" />
        </Sequence>
      </Sequences>
    </Rule>
  
    <Rule StartingNonTerminal="FromClause">
      <Sequences>
        <Sequence>
          <NonTerminal Id="TableReference" />
          <NonTerminal Id="JoinClause" IsOptional="true" />
          <NonTerminal Id="FromClauseChained" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="FromClauseChained">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="FromClause" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="TableReference">
      <Sequences>
        <Sequence>
          <NonTerminal Id="InnerTableReference" />
          <Terminal Id="Alias" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="TableReference" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="InnerTableReference">
      <Sequences>
        <Sequence>
          <Terminal Id="Only" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="QueryTableExpression" />
          <Terminal Id="RightParenthesis" />
          <NonTerminal Id="FlashbackQueryClause" IsOptional="true" />
          <NonTerminal Id="PivotClauseOrUnpivotClauseOrRowPatternClause" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="QueryTableExpression" />
          <NonTerminal Id="FlashbackQueryClause" IsOptional="true" />
          <NonTerminal Id="PivotClauseOrUnpivotClauseOrRowPatternClause" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="InnerTableReference" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="PivotClauseOrUnpivotClauseOrRowPatternClause">
      <Sequences>
        <Sequence>
          <NonTerminal Id="PivotClause" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="UnpivotClause" />
        </Sequence>
        <!-- TODO: Row pattern clause -->
        <!--<Sequence>
          <NonTerminal Id="RowPatternClause" />
        </Sequence>-->
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="QueryTableExpression">
      <Sequences>
        <Sequence>
          <NonTerminal Id="SchemaPrefix" IsOptional="true" />
          <Terminal Id="ObjectIdentifier" />
          <NonTerminal Id="PartitionOrDatabaseLink" IsOptional="true" />
          <NonTerminal Id="SampleClause" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="Lateral" IsOptional="true" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="NestedQuery" />
          <NonTerminal Id="SubQueryRestrictionClause" IsOptional="true" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="TableCollectionExpression" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="TableCollectionExpression">
      <Sequences>
        <Sequence>
          <Terminal Id="Table" /><!-- Oracle 8.0 introduced 'THE' terminal later superseeded by TABLE -->
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="Prefix" IsOptional="true" />
          <Terminal Id="Identifier" />
          <NonTerminal Id="DatabaseLink" IsOptional="true" />
          <NonTerminal Id="ParenthesisEnclosedAggregationFunctionParameters" IsOptional="true" />
          <Terminal Id="RightParenthesis" />
          <NonTerminal Id="OuterJoinOld" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="SubQueryRestrictionClause">
      <Sequences>
        <Sequence>
          <Terminal Id="With" />
          <NonTerminal Id="ReadOnlyOrCheckOption" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ConstraintName">
      <Sequences>
        <Sequence>
          <Terminal Id="Constraint" />
          <Terminal Id="Identifier" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ReadOnlyOrCheckOption">
      <Sequences>
        <Sequence>
          <Terminal Id="Read" />
          <Terminal Id="Only" />
        </Sequence>
        <Sequence>
          <Terminal Id="Check" />
          <Terminal Id="Option" />
          <NonTerminal Id="ConstraintName" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="OuterJoinOld">
      <Sequences>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <Terminal Id="MathPlus" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="Prefix">
      <Sequences>
        <Sequence>
          <NonTerminal Id="SchemaPrefix" IsOptional="true" />
          <NonTerminal Id="ObjectPrefix" />
        </Sequence>
      </Sequences>
    </Rule>
  
    <Rule StartingNonTerminal="SchemaPrefix">
      <Sequences>
        <Sequence>
          <Terminal Id="SchemaIdentifier" />
          <Terminal Id="Dot" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ObjectPrefix">
      <Sequences>
        <Sequence>
          <Terminal Id="ObjectIdentifier" />
          <Terminal Id="Dot" />
        </Sequence>
      </Sequences>
    </Rule>
  
    <Rule StartingNonTerminal="PartitionOrDatabaseLink">
      <Sequences>
        <Sequence>
          <NonTerminal Id="PartitionExtensionClause" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="DatabaseLink" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="DatabaseLink">
      <Sequences>
        <Sequence>
          <Terminal Id="At" />
          <Terminal Id="DatabaseLinkIdentifier" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="PartitionExtensionClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Partition" />
          <NonTerminal Id="PartitionNameOrKeySet" />
        </Sequence>
        <Sequence>
          <Terminal Id="Subpartition" />
          <NonTerminal Id="PartitionNameOrKeySet" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="PartitionNameOrKeySet">
      <Sequences>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <Terminal Id="ObjectIdentifier" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
        <Sequence>
          <Terminal Id="For" />
          <NonTerminal Id="ParenthesisEnclosedExpressionListWithMandatoryExpressions" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <!-- Subqueries -->
    <Rule StartingNonTerminal="SubqueryFactoringClause">
      <Sequences>
        <Sequence>
          <Terminal Id="With" />
          <NonTerminal Id="SubqueryComponent" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="SubqueryComponent">
      <Sequences>
        <Sequence>
          <Terminal Id="ObjectIdentifier" Tag="SubQueryName" Comment="Sub query name" />
          <NonTerminal Id="ParenthesisEnclosedColumnIdentifierList" IsOptional="true" />
          <Terminal Id="As" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="Subquery" />
          <Terminal Id="RightParenthesis" />
          <NonTerminal Id="SubqueryFactoringSearchClause" IsOptional="true" />
          <NonTerminal Id="SubqueryFactoringCycleClause" IsOptional="true" />
          <NonTerminal Id="SubqueryComponentChained" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ParenthesisEnclosedColumnIdentifierList">
      <Sequences>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="ColumnIdentifierList" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ColumnIdentifierList">
      <Sequences>
        <Sequence>
          <Terminal Id="Identifier" />
          <NonTerminal Id="ColumnIdentifierChainedList" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="SubqueryComponentChained">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="SubqueryComponent" />
        </Sequence>
      </Sequences>
    </Rule>
  
    <Rule StartingNonTerminal="Subquery">
      <Sequences>
        <Sequence>
          <NonTerminal Id="QueryBlock" />
          <NonTerminal Id="ConcatenatedSubquery" IsOptional="true" />
          <NonTerminal Id="OrderByClause" IsOptional="true" />
          <NonTerminal Id="RowLimitingClause" IsOptional="true" />
        </Sequence>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="Subquery" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>
  
    <Rule StartingNonTerminal="ConcatenatedSubquery">
      <Sequences>
        <Sequence>
          <NonTerminal Id="SetOperation" />
          <NonTerminal Id="Subquery" />
          <NonTerminal Id="ConcatenatedSubquery" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>
  
    <Rule StartingNonTerminal="SetOperation">
      <Sequences>
        <Sequence>
          <Terminal Id="Intersect" />
        </Sequence>
        <Sequence>
          <Terminal Id="SetMinus" />
        </Sequence>
        <Sequence>
          <Terminal Id="Union" />
          <Terminal Id="All" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="SetQualifier">
      <Sequences>
        <Sequence>
          <Terminal Id="Any" />
        </Sequence>
        <Sequence>
          <Terminal Id="Some" />
        </Sequence>
        <Sequence>
          <Terminal Id="All" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- Where clause -->
    <Rule StartingNonTerminal="WhereClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Where" />
          <NonTerminal Id="Condition" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- Group by clause -->
    <Rule StartingNonTerminal="GroupByClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Group" />
          <Terminal Id="By" />
          <NonTerminal Id="GroupingClause" />
          <NonTerminal Id="HavingClause" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="GroupingClause">
      <Sequences>
        <Sequence>
          <NonTerminal Id="GroupingSetsClause" />
          <NonTerminal Id="GroupingClauseChained" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="RollupCubeClause" />
          <NonTerminal Id="GroupingClauseChained" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="Expression" />
          <NonTerminal Id="GroupingClauseChained" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="GroupingClauseChained">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="GroupingClause" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="GroupingSetsClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Grouping" />
          <Terminal Id="Sets" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="GroupingExpressionListOrRollupCubeClause" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="GroupingExpressionListOrRollupCubeClause">
      <Sequences>
        <Sequence>
          <NonTerminal Id="RollupCubeClause" />
          <NonTerminal Id="GroupingExpressionListOrRollupCubeClauseChained" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="ParenthesisEnclosedExpressionList" />
          <NonTerminal Id="GroupingExpressionListOrRollupCubeClauseChained" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="Expression" />
          <NonTerminal Id="GroupingExpressionListOrRollupCubeClauseChained" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="GroupingExpressionListOrRollupCubeClauseChained">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="GroupingExpressionListOrRollupCubeClause" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="RollupCubeClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Rollup" />
          <NonTerminal Id="ParenthesisEnclosedGroupingExpressionList" />
        </Sequence>
        <Sequence>
          <Terminal Id="Cube" />
          <NonTerminal Id="ParenthesisEnclosedGroupingExpressionList" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ParenthesisEnclosedGroupingExpressionList">
      <Sequences>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="GroupingExpressionList" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="GroupingExpressionList">
      <Sequences>
        <Sequence>
          <NonTerminal Id="ParenthesisEnclosedExpressionList" />
          <NonTerminal Id="GroupingExpressionListChained" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="ExpressionList" />
          <NonTerminal Id="GroupingExpressionListChained" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="GroupingExpressionListChained">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="GroupingExpressionList" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- Having clause -->
    <Rule StartingNonTerminal="HavingClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Having" />
          <NonTerminal Id="Condition" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- For update clause -->
    <Rule StartingNonTerminal="ForUpdateClause">
      <Sequences>
        <Sequence>
          <Terminal Id="For" />
          <Terminal Id="Update" />
          <NonTerminal Id="ForUpdateOfColumnsClause" IsOptional="true" />
          <NonTerminal Id="ForUpdateLockingClause" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ForUpdateOfColumnsClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Of" />
          <NonTerminal Id="ForUpdateColumn" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ForUpdateColumn">
      <Sequences>
        <Sequence Comment="(Schema.)Table/View.Column">
          <NonTerminal Id="Prefix" IsOptional="true" />
          <Terminal Id="Identifier" />
          <NonTerminal Id="ForUpdateColumnChained" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ForUpdateColumnChained">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="ForUpdateColumn" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="ForUpdateLockingClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Skip" />
          <Terminal Id="Locked" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="ForUpdateWaitClause" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ForUpdateWaitClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Nowait" />
        </Sequence>
        <Sequence>
          <Terminal Id="Wait" />
          <Terminal Id="IntegerLiteral" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <!-- Flashback -->
    <Rule StartingNonTerminal="FlashbackQueryClause">
      <Sequences>
        <Sequence>
          <NonTerminal Id="FlashbackVersionsClause" IsOptional="true" />
          <NonTerminal Id="FlashbackAsOfClause" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="FlashbackAsOfClause">
      <Sequences>
        <Sequence>
          <Terminal Id="As" />
          <Terminal Id="Of" />
          <NonTerminal Id="SystemChangeNumberOrTimestampOrPeriodFor" />
          <NonTerminal Id="Expression" />
        </Sequence>
      </Sequences>
    </Rule>
  
    <Rule StartingNonTerminal="FlashbackVersionsClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Versions" />
          <NonTerminal Id="BetweenSystemChangeNumberOrTimestampOrPeriodForBetween" />
          <NonTerminal Id="FlashbackMinimumValue" />
          <Terminal Id="And" />
          <NonTerminal Id="FlashbackMaximumValue" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="BetweenSystemChangeNumberOrTimestamp">
      <Sequences>
        <Sequence>
          <Terminal Id="Between" />
          <NonTerminal Id="SystemChangeNumberOrTimestamp" />
        </Sequence>
      </Sequences>
    </Rule>
  
    <Rule StartingNonTerminal="SystemChangeNumberOrTimestamp">
      <Sequences>
        <Sequence>
          <Terminal Id="SystemChangeNumber" />
        </Sequence>
        <Sequence>
          <Terminal Id="Timestamp" />
        </Sequence>
      </Sequences>
    </Rule>
  
    <Rule StartingNonTerminal="FlashbackMinimumValue">
      <Sequences>
        <Sequence>
          <NonTerminal Id="Expression" />
        </Sequence>
        <Sequence>
          <Terminal Id="MinimumValue" />
        </Sequence>
      </Sequences>
    </Rule>
  
    <Rule StartingNonTerminal="FlashbackMaximumValue">
      <Sequences>
        <Sequence>
          <NonTerminal Id="Expression" />
        </Sequence>
        <Sequence>
          <Terminal Id="MaximumValue" />
        </Sequence>
      </Sequences>
    </Rule>
  
    <!-- JOIN syntax -->
    <Rule StartingNonTerminal="JoinClause">
      <Sequences>
        <Sequence>
          <NonTerminal Id="InnerJoinClause" />
          <NonTerminal Id="JoinClause" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="OuterJoinClause" />
          <NonTerminal Id="JoinClause" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="CrossOrOuterApplyClause" />
          <NonTerminal Id="JoinClause" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>
      
    <Rule StartingNonTerminal="InnerJoinClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Cross" />
          <Terminal Id="Join" />
          <NonTerminal Id="TableReference" />
        </Sequence>
        <Sequence>
          <Terminal Id="Natural" />
          <Terminal Id="Inner" IsOptional="true" />
          <Terminal Id="Join" />
          <NonTerminal Id="TableReference" />
        </Sequence>
        <Sequence>
          <Terminal Id="Inner" IsOptional="true" />
          <Terminal Id="Join" />
          <NonTerminal Id="TableReference" />
          <NonTerminal Id="JoinColumnsOrCondition" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="JoinColumnsOrCondition">
      <Sequences>
        <Sequence>
          <Terminal Id="On" />
          <NonTerminal Id="Condition" />
        </Sequence>
        <Sequence>
          <Terminal Id="Using" />
          <NonTerminal Id="ParenthesisEnclosedColumnIdentifierList" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="ColumnIdentifierChainedList">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <Terminal Id="Identifier" />
          <NonTerminal Id="ColumnIdentifierChainedList" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>
  
    <Rule StartingNonTerminal="OuterJoinClause">
      <Sequences>
        <Sequence>
          <NonTerminal Id="OuterJoinPartitionClause" IsOptional="true" />
          <NonTerminal Id="NaturalOrOuterJoinType" />
          <Terminal Id="Join" />
          <NonTerminal Id="TableReference" />
          <NonTerminal Id="OuterJoinPartitionClause" IsOptional="true" />
          <NonTerminal Id="JoinColumnsOrCondition" /><!-- This non-terminal is optional in Oracle documentation. -->
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="NaturalOrOuterJoinType">
      <Sequences>
        <Sequence>
          <NonTerminal Id="OuterJoinTypeWithKeyword" />
        </Sequence>
        <Sequence>
          <Terminal Id="Natural" />
          <NonTerminal Id="OuterJoinTypeWithKeyword" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="OuterJoinPartitionClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Partition" />
          <Terminal Id="By" />
          <NonTerminal Id="GroupingExpressionList" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="OuterJoinTypeWithKeyword">
      <Sequences>
        <Sequence>
          <NonTerminal Id="OuterJoinType" />
          <Terminal Id="Outer" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="OuterJoinType">
      <Sequences>
        <Sequence>
          <Terminal Id="Full" />
        </Sequence>
        <Sequence>
           <Terminal Id="Left" />
        </Sequence>
        <Sequence>
           <Terminal Id="Right" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- ORDER BY syntax -->
    <Rule StartingNonTerminal="OrderByClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Order" />
          <Terminal Id="Siblings" IsOptional="true" />
          <Terminal Id="By" />
          <NonTerminal Id="OrderExpression" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="OrderExpression">
      <Sequences>
        <Sequence>
          <NonTerminal Id="OrderExpressionType" />
          <NonTerminal Id="SortOrder" IsOptional="true" />
          <NonTerminal Id="NullsClause" IsOptional="true" />
          <NonTerminal Id="OrderExpressionChained" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="OrderExpressionChained">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="OrderExpression" />
          <NonTerminal Id="OrderExpressionChained" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="OrderExpressionType">
      <Sequences>
        <Sequence>
          <NonTerminal Id="Expression" />
        </Sequence>
        <Sequence>
          <Terminal Id="Alias" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="SortOrder">
      <Sequences>
        <Sequence>
          <Terminal Id="Asc" />
        </Sequence>
        <Sequence>
          <Terminal Id="Desc" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="NullsClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Nulls" />
          <NonTerminal Id="FirstOrLast" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="FirstOrLast">
      <Sequences>
        <Sequence>
          <Terminal Id="First" />
        </Sequence>
        <Sequence>
          <Terminal Id="Last" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- Hierarchical query -->
    <Rule StartingNonTerminal="HierarchicalQueryClause">
      <Sequences>
        <Sequence>
          <NonTerminal Id="HierarchicalQueryConnectByClause" />
          <NonTerminal Id="HierarchicalQueryStartWithClause" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="HierarchicalQueryStartWithClause" />
          <NonTerminal Id="HierarchicalQueryConnectByClause" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="HierarchicalQueryConnectByClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Connect" />
          <Terminal Id="By" />
          <Terminal Id="NoCycle" IsOptional="true" />
          <NonTerminal Id="Condition" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="HierarchicalQueryStartWithClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Start" />
          <Terminal Id="With" />
          <NonTerminal Id="Condition" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- Sample clause -->
    <Rule StartingNonTerminal="SampleClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Sample" />
          <Terminal Id="Block" IsOptional="true" />
          <Terminal Id="LeftParenthesis" />
          <Terminal Id="NumberLiteral" />
          <Terminal Id="RightParenthesis" />
          <NonTerminal Id="SeedClause" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="SeedClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Seed" />
          <Terminal Id="LeftParenthesis" />
          <Terminal Id="NumberLiteral" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- Analytic clause -->
    <Rule StartingNonTerminal="AnalyticClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Over" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="QueryPartitionClause" IsOptional="true" />
          <NonTerminal Id="OrderByClause" IsOptional="true" />
          <NonTerminal Id="WindowingClause" IsOptional="true" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="QueryPartitionClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Partition" />
          <Terminal Id="By" />
          <NonTerminal Id="GroupingExpressionList" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="WindowingClause">
      <Sequences>
        <Sequence>
          <NonTerminal Id="RowsOrRange" />
          <NonTerminal Id="PrecedingOnlyOrBetweenPrecedingAndFollowing" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="RowsOrRange">
      <Sequences>
        <Sequence>
          <Terminal Id="Rows" />
        </Sequence>
        <Sequence>
          <Terminal Id="Range" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="PrecedingOnlyOrBetweenPrecedingAndFollowing">
      <Sequences>
        <Sequence>
          <NonTerminal Id="PrecedingOnlyClause" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="BetweenPrecedingAndFollowingClause" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="BetweenPrecedingAndFollowingClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Between" />
          <NonTerminal Id="BetweenPrecedingClause" />
          <Terminal Id="And" />
          <NonTerminal Id="BetweenFollowingClause" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="BetweenPrecedingClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Unbounded" />
          <Terminal Id="Preceding" />
        </Sequence>
        <Sequence>
          <Terminal Id="Current" />
          <Terminal Id="Row" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="Expression" />
          <NonTerminal Id="PrecedingOrFollowing" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="BetweenFollowingClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Unbounded" />
          <Terminal Id="Following" />
        </Sequence>
        <Sequence>
          <Terminal Id="Current" />
          <Terminal Id="Row" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="Expression" />
          <NonTerminal Id="PrecedingOrFollowing" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="PrecedingOnlyClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Unbounded" />
          <Terminal Id="Preceding" />
        </Sequence>
        <Sequence>
          <Terminal Id="Current" />
          <Terminal Id="Row" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="Expression" />
          <Terminal Id="Preceding" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="PrecedingOrFollowing">
      <Sequences>
        <Sequence>
          <Terminal Id="Preceding" />
        </Sequence>
        <Sequence>
          <Terminal Id="Following" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- KEEP clause  -->
    <Rule StartingNonTerminal="IgnoreNulls">
      <Sequences>
        <Sequence>
          <Terminal Id="Ignore" />
          <Terminal Id="Nulls" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="KeepClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Keep" />
          <Terminal Id="LeftParenthesis" />
          <Terminal Id="DenseRank" />
          <NonTerminal Id="FirstOrLast" />
          <NonTerminal Id="OrderByClause" />
          <Terminal Id="RightParenthesis" />
          <NonTerminal Id="OverQueryPartitionClause" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <Rule StartingNonTerminal="OverQueryPartitionClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Over" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="QueryPartitionClause" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- Pivot clause -->
    <Rule StartingNonTerminal="PivotClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Pivot" />
          <Terminal Id="Xml" IsOptional="true" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="PivotAliasedAggregationFunctionList" />
          <NonTerminal Id="PivotForClause" />
          <NonTerminal Id="PivotInClause" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="PivotAliasedAggregationFunctionList">
      <Sequences>
        <Sequence>
          <Terminal Id="Identifier" /><!--TODO: Check possibility of user aggregation function usage (including database link) -->
          <NonTerminal Id="ParenthesisEnclosedFunctionParameters" />
          <NonTerminal Id="ColumnAlias" IsOptional="true" />
          <NonTerminal Id="PivotAliasedAggregationFunctionListChained" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="PivotAliasedAggregationFunctionListChained">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="ParenthesisEnclosedFunctionParameters" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="PivotForClause">
      <Sequences>
        <Sequence>
          <Terminal Id="For" />
          <NonTerminal Id="IdentifierOrParenthesisEnclosedColumnIdentifierList" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="IdentifierOrParenthesisEnclosedColumnIdentifierList">
      <Sequences>
        <Sequence>
          <Terminal Id="Identifier" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="ParenthesisEnclosedColumnIdentifierList" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="PivotInClause">
      <Sequences>
        <Sequence>
          <Terminal Id="In" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="PivotExpressionsOrAnyListOrNestedQuery" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="PivotExpressionsOrAnyListOrNestedQuery">
      <Sequences>
        <Sequence>
          <NonTerminal Id="AliasedExpressionListOrAliasedGroupingExpressionList" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="NestedQuery" />
        </Sequence>
        <Sequence>
          <Terminal Id="Any" />
          <NonTerminal Id="AnyChainedList" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="AliasedExpressionListOrAliasedGroupingExpressionList">
      <Sequences>
        <Sequence>
          <NonTerminal Id="AliasedExpression" />
          <NonTerminal Id="AliasedExpressionListOrAliasedGroupingExpressionListChained" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="ParenthesisEnclosedExpressionListWithMandatoryExpressions" />
          <NonTerminal Id="ColumnAlias" IsOptional="true" />
          <NonTerminal Id="AliasedExpressionListOrAliasedGroupingExpressionListChained" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="AliasedExpressionListOrAliasedGroupingExpressionListChained">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="AliasedExpressionListOrAliasedGroupingExpressionList" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="AnyChainedList">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <Terminal Id="Any" />
          <NonTerminal Id="AnyChainedList" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- Unpivot clause -->
    <Rule StartingNonTerminal="UnpivotClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Unpivot" />
          <NonTerminal Id="UnpivotNullsClause" IsOptional="true" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="IdentifierOrParenthesisEnclosedColumnIdentifierList" />
          <NonTerminal Id="PivotForClause" />
          <NonTerminal Id="UnpivotInClause" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="UnpivotNullsClause">
      <Sequences>
        <Sequence>
          <NonTerminal Id="IncludeOrExclude" />
          <Terminal Id="Nulls" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="IncludeOrExclude">
      <Sequences>
        <Sequence>
          <Terminal Id="Include" />
        </Sequence>
        <Sequence>
          <Terminal Id="Exclude" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="UnpivotInClause">
      <Sequences>
        <Sequence>
          <Terminal Id="In" />
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="UnpivotValueToColumnTransformationList" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="UnpivotValueToColumnTransformationList">
      <Sequences>
        <Sequence>
          <NonTerminal Id="IdentifierOrParenthesisEnclosedColumnIdentifierList" />
          <NonTerminal Id="UnpivotValueSelector" IsOptional="true" />
          <NonTerminal Id="UnpivotValueToColumnTransformationListChained" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="UnpivotValueToColumnTransformationListChained">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma" />
          <NonTerminal Id="UnpivotValueToColumnTransformationList" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="UnpivotValueSelector">
      <Sequences>
        <Sequence>
          <Terminal Id="As" />
          <NonTerminal Id="StringOrIntegerLiteralOrParenthesisEnclosedStringOrIntegerLiteralList" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="StringOrIntegerLiteralOrParenthesisEnclosedStringOrIntegerLiteralList">
      <Sequences>
        <Sequence>
          <NonTerminal Id="StringOrIntegerLiteral" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="ParenthesisEnclosedStringOrIntegerLiteralList" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="ParenthesisEnclosedStringOrIntegerLiteralList">
      <Sequences>
        <Sequence>
          <Terminal Id="LeftParenthesis" />
          <NonTerminal Id="StringOrIntegerLiteralList" />
          <Terminal Id="RightParenthesis" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="StringOrIntegerLiteralList">
      <Sequences>
        <Sequence>
          <NonTerminal Id="StringOrIntegerLiteral"/>
          <NonTerminal Id="StringOrIntegerLiteralListChained" IsOptional="true" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="StringOrIntegerLiteralListChained">
      <Sequences>
        <Sequence>
          <Terminal Id="Comma"/>
          <NonTerminal Id="StringOrIntegerLiteralList"/>
        </Sequence>
      </Sequences>
    </Rule>
    
    <!-- Oracle 12c specific -->
    <!-- Row limiting clause -->
    <Rule StartingNonTerminal="RowLimitingClause">
      <Sequences>
        <Sequence>
          <NonTerminal Id="RowLimitingOffsetClause" />
          <NonTerminal Id="RowLimitingFetchClause" IsOptional="true" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="RowLimitingFetchClause" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="RowLimitingOffsetClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Offset" />
          <Terminal Id="NumberLiteral" />
          <NonTerminal Id="RowOrRows" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="RowLimitingFetchClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Fetch" />
          <NonTerminal Id="FirstOrNext" />
          <Terminal Id="NumberLiteral" />
          <Terminal Id="Percent" IsOptional="true" />
          <NonTerminal Id="RowOrRows" />
          <NonTerminal Id="OnlyOrWithTies" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="RowOrRows">
      <Sequences>
        <Sequence>
          <Terminal Id="Row" />
        </Sequence>
        <Sequence>
          <Terminal Id="Rows" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="FirstOrNext">
      <Sequences>
        <Sequence>
          <Terminal Id="First" />
        </Sequence>
        <Sequence>
          <Terminal Id="Next" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="OnlyOrWithTies">
      <Sequences>
        <Sequence>
          <Terminal Id="Only" />
        </Sequence>
        <Sequence>
          <Terminal Id="With" />
          <Terminal Id="Ties" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- Flashback period for -->
    <Rule StartingNonTerminal="FlashbackPeriodFor">
      <Sequences>
        <Sequence>
          <Terminal Id="Period" />
          <Terminal Id="For" />
          <Terminal Id="Identifier" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="SystemChangeNumberOrTimestampOrPeriodFor">
      <Sequences>
        <Sequence>
          <NonTerminal Id="SystemChangeNumberOrTimestamp" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="FlashbackPeriodFor" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="BetweenSystemChangeNumberOrTimestampOrPeriodForBetween">
      <Sequences>
        <Sequence>
          <NonTerminal Id="BetweenSystemChangeNumberOrTimestamp" />
        </Sequence>
        <Sequence>
          <NonTerminal Id="FlashbackPeriodFor" />
          <Terminal Id="Between" />
        </Sequence>
      </Sequences>
    </Rule>
    
    <!-- Subquery factoring search clause -->
    <Rule StartingNonTerminal="SubqueryFactoringSearchClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Search" />
          <NonTerminal Id="DepthOrBreadth" />
          <Terminal Id="First" />
          <Terminal Id="By" />
          <NonTerminal Id="OrderExpression" />
          <Terminal Id="Set" />
          <Terminal Id="Identifier" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="DepthOrBreadth">
      <Sequences>
        <Sequence>
          <Terminal Id="Depth" />
        </Sequence>
        <Sequence>
          <Terminal Id="Breadth" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- Subquery factoring cycle clause -->
    <Rule StartingNonTerminal="SubqueryFactoringCycleClause">
      <Sequences>
        <Sequence>
          <Terminal Id="Cycle" />
          <NonTerminal Id="ColumnIdentifierList" />
          <Terminal Id="Set" />
          <Terminal Id="Alias" />
          <Terminal Id="To" />
          <NonTerminal Id="StringOrIntegerLiteral" />
          <Terminal Id="Default" />
          <NonTerminal Id="StringOrIntegerLiteral" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="StringOrIntegerLiteral">
      <Sequences>
        <Sequence>
          <Terminal Id="StringLiteral" />
        </Sequence>
        <Sequence>
          <Terminal Id="IntegerLiteral" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- Cross/outer apply clause -->
    <Rule StartingNonTerminal="CrossOrOuterApplyClause">
      <Sequences>
        <Sequence>
          <NonTerminal Id="CrossOrOuter" />
          <Terminal Id="Apply" />
          <NonTerminal Id="TableReference" />
        </Sequence>
      </Sequences>
    </Rule>

    <Rule StartingNonTerminal="CrossOrOuter">
      <Sequences>
        <Sequence>
          <Terminal Id="Cross" />
        </Sequence>
        <Sequence>
          <Terminal Id="Outer" />
        </Sequence>
      </Sequences>
    </Rule>

    <!-- TODO: Row pattern clause -->
  </Rules>
      
  <Terminals>
    <Terminal Id="With" Value="WITH" IsKeyword="true" />
    <Terminal Id="As" Value="AS" />
    <Terminal Id="Is" Value="IS" IsKeyword="true" />
    <Terminal Id="LeftParenthesis" Value="(" />
    <Terminal Id="RightParenthesis" Value=")" />
    <Terminal Id="MathPlus" Value="+" />
    <Terminal Id="MathMinus" Value="-" />
    <Terminal Id="MathFactor" Value="*" />
    <Terminal Id="MathDivide" Value="/" />
    <Terminal Id="MathEquals" Value="=" />
    <Terminal Id="MathNotEqualsC" Value="!=">
      <Synonyms>
        <Synonym Id="MathNotEqualsSql" />
        <Synonym Id="MathNotEqualsCircumflex" />
      </Synonyms>
    </Terminal>
    <Terminal Id="MathNotEqualsSql" Value="&lt;&gt;">
      <Synonyms>
        <Synonym Id="MathNotEqualsC" />
        <Synonym Id="MathNotEqualsCircumflex" />
      </Synonyms>
    </Terminal>
    <Terminal Id="MathNotEqualsCircumflex" Value="^=">
      <Synonyms>
        <Synonym Id="MathNotEqualsSql" />
        <Synonym Id="MathNotEqualsC" />
      </Synonyms>
    </Terminal>
    <Terminal Id="MathGreatherThan" Value="&gt;" />
    <Terminal Id="MathGreatherThanOrEquals" Value="&gt;=" />
    <Terminal Id="MathLessThan" Value="&lt;" />
    <Terminal Id="MathLessThanOrEquals" Value="&lt;=" />
    <Terminal Id="MathNotANumber" Value="NAN" />
    <Terminal Id="MathInfinite" Value="INFINITE" />
    <Terminal Id="OperatorConcatenation" Value="||" />
    <Terminal Id="Dot" Value="." />
    <Terminal Id="Comma" Value="," />
    <Terminal Id="Semicolon" Value=";" />
    <Terminal Id="Colon" Value=":" />
    <Terminal Id="Asterisk" Value="*" />
    <Terminal Id="At" Value="@" />
    <Terminal Id="Space" RegexValue="[:space:]+" />
    <Terminal Id="Union" Value="UNION" IsKeyword="true" />
    <Terminal Id="All" Value="ALL" IsKeyword="true" />
    <Terminal Id="Any" Value="ANY" IsKeyword="true">
      <Synonyms>
        <Synonym Id="Some"/>
      </Synonyms>
    </Terminal>
    <Terminal Id="Some" Value="SOME" IsKeyword="true">
      <Synonyms>
        <Synonym Id="Any"/>
      </Synonyms>
    </Terminal>
    <Terminal Id="In" Value="IN" IsKeyword="true" />
    <Terminal Id="Set" Value="SET" IsKeyword="true" />
    <Terminal Id="SetMinus" Value="MINUS" IsKeyword="true" />
    <Terminal Id="Intersect" Value="INTERSECT" IsKeyword="true" />
    <Terminal Id="Select" Value="SELECT" IsKeyword="true" />
    <Terminal Id="Distinct" Value="DISTINCT" IsKeyword="true">
      <Synonyms>
        <Synonym Id="Unique" />
      </Synonyms>
    </Terminal>
    <Terminal Id="Unique" Value="UNIQUE" IsKeyword="true">
      <Synonyms>
        <Synonym Id="Distinct" />
      </Synonyms>
    </Terminal>
    <Terminal Id="From" Value="FROM" IsKeyword="true" />
    <Terminal Id="Null" Value="NULL" IsKeyword="true" />
    <Terminal Id="And" Value="AND" IsKeyword="true" />
    <Terminal Id="Or" Value="OR" IsKeyword="true" />
    <Terminal Id="Not" Value="NOT" IsKeyword="true" />
    <Terminal Id="Exists" Value="EXISTS" IsKeyword="true" />
    <Terminal Id="Where" Value="WHERE" IsKeyword="true" />
    <Terminal Id="Between" Value="BETWEEN" IsKeyword="true" />
    <Terminal Id="Date" Value="DATE" IsKeyword="true" />
    <Terminal Id="Partition" Value="PARTITION" />
    <Terminal Id="Subpartition" Value="SUBPARTITION" />
    <Terminal Id="Table" Value="TABLE" IsKeyword="true" />
    <Terminal Id="Public" Value="PUBLIC" IsKeyword="true" />
    <Terminal Id="Column" Value="COLUMN" IsKeyword="true" />
    <Terminal Id="SequenceCurrentValue" Value="CURRVAL" />
    <Terminal Id="SequenceNextValue" Value="NEXTVAL" />
    <Terminal Id="RowNumberPseudoColumn" Value="ROWNUM" IsKeyword="true" />
    <Terminal Id="RowIdPseudoColumn" Value="ROWID" IsKeyword="true" />
    <Terminal Id="Identifier" RegexValue="^((&quot;[^&quot;]{1,28}&quot;)|([a-zA-Z][\w\d$#]{0,29}))$" />
    <Terminal Id="DatabaseLinkIdentifier" RegexValue="^((&quot;[^&quot;]{1,28}&quot;)|([a-zA-Z][\w\d$#]{0,29}))$" />
    <Terminal Id="SchemaIdentifier" RegexValue="^((&quot;[^&quot;]{1,28}&quot;)|([a-zA-Z][\w\d$#]{0,29}))$" />
    <Terminal Id="ObjectIdentifier" RegexValue="^((&quot;[^&quot;]{1,28}&quot;)|([a-zA-Z][\w\d$#]{0,29}))$" />
    <Terminal Id="BindVariableIdentifier" RegexValue="^((&quot;[^&quot;]{1,28}&quot;)|([a-zA-Z][\w\d$#]{0,29})|(\d{1,5}))$" />
    <Terminal Id="Alias" RegexValue="^((&quot;[^&quot;]{1,28}&quot;)|([a-zA-Z][\w\d$#]{0,29}))$" />
    <Terminal Id="StringLiteral" RegexValue="^n?q?(&apos;([^&apos;]|(&apos;&apos;))*&apos;)$" />
    <Terminal Id="NumberLiteral" RegexValue="^((\d+\.?\d*)|(\d*\.?\d+))([eE][+-]?\d+)?[fFdD]?$" />
    <Terminal Id="IntegerLiteral" RegexValue="^\d+([eE]((\+?\d+)|(-0)))?$" />

    <!-- CAST function -->
    <Terminal Id="Cast" Value="CAST" />
    <Terminal Id="Multiset" Value="MULTISET" />
    <Terminal Id="DataTypeName" RegexValue="^((&quot;[^&quot;]{1,28}&quot;)|([a-zA-Z][\w\d$#]{0,29}))$" />

    <!-- TREAT function -->
    <Terminal Id="Treat" Value="TREAT" />
    <Terminal Id="Ref" Value="REF" />

    <!-- Sample clause -->
    <Terminal Id="Sample" Value="SAMPLE" />
    <Terminal Id="Block" Value="BLOCK" />
    <Terminal Id="Seed" Value="SEED" />

    <!-- Restriction clause -->
    <Terminal Id="Read" Value="READ" />
    <Terminal Id="Only" Value="ONLY" />
    <Terminal Id="Check" Value="CHECK" IsKeyword="true" />
    <Terminal Id="Option" Value="OPTION" IsKeyword="true" />
    <Terminal Id="Constraint" Value="CONSTRAINT" />

    <!-- LIKE -->
    <Terminal Id="Like" Value="LIKE" IsKeyword="true" Comment="Uses input character set" />
    <Terminal Id="LikeUcs2" Value="LIKE2" Comment="2 byte Universal Character Set" />
    <Terminal Id="LikeUcs4" Value="LIKE4" Comment="4 byte Universal Character Set" />
    <Terminal Id="LikeUnicode" Value="LIKEC" Comment="Unicode" />
    <Terminal Id="Escape" Value="ESCAPE" />

    <!-- For update -->
    <Terminal Id="For" Value="FOR" IsKeyword="true" />
    <Terminal Id="Update" Value="UPDATE" IsKeyword="true" />
    <Terminal Id="Nowait" Value="NOWAIT" IsKeyword="true" />
    <Terminal Id="Wait" Value="WAIT" />
    <Terminal Id="Skip" Value="SKIP" />
    <Terminal Id="Locked" Value="LOCKED" />
    <Terminal Id="Of" Value="OF" IsKeyword="true" />
    
    <!-- Case expression -->
    <Terminal Id="Case" Value="CASE" />
    <Terminal Id="When" Value="WHEN" />
    <Terminal Id="Then" Value="THEN" IsKeyword="true" />
    <Terminal Id="Else" Value="ELSE" IsKeyword="true" />
    <Terminal Id="End" Value="END" />

    <!-- Group by -->
    <Terminal Id="Group" Value="GROUP" IsKeyword="true" />
    <Terminal Id="By" Value="BY" IsKeyword="true" />
    <Terminal Id="Rollup" Value="ROLLUP" />
    <Terminal Id="Cube" Value="CUBE" />
    <Terminal Id="Having" Value="HAVING" IsKeyword="true" />
    <Terminal Id="Grouping" Value="GROUPING" />
    <Terminal Id="Sets" Value="SETS" />
    
    <!-- Flashback -->
    <Terminal Id="Versions" Value="VERSIONS" />
    <Terminal Id="SystemChangeNumber" Value="SCN" />
    <Terminal Id="Timestamp" Value="TIMESTAMP" />
    <Terminal Id="MinimumValue" Value="MINVALUE" />
    <Terminal Id="MaximumValue" Value="MAXVALUE" />
  
    <!-- Join -->
    <Terminal Id="Join" Value="JOIN" />
    <Terminal Id="Left" Value="LEFT" />
    <Terminal Id="Right" Value="RIGHT" />
    <Terminal Id="Full" Value="FULL" />
    <Terminal Id="Inner" Value="INNER" />
    <Terminal Id="Outer" Value="OUTER" />
    <Terminal Id="Natural" Value="NATURAL" />
    <Terminal Id="Cross" Value="CROSS" />
    <Terminal Id="Using" Value="USING" />
    <Terminal Id="On" Value="ON" IsKeyword="true" />

    <!-- Order by -->
    <Terminal Id="Order" Value="ORDER" IsKeyword="true" />
    <Terminal Id="Asc" Value="ASC" IsKeyword="true" />
    <Terminal Id="Desc" Value="DESC" IsKeyword="true" />
    <Terminal Id="Siblings" Value="SIBLINGS" />
    <Terminal Id="Nulls" Value="NULLS" />
    <Terminal Id="First" Value="FIRST" />
    <Terminal Id="Last" Value="LAST" />

    <!-- Hierarchical query -->
    <Terminal Id="Connect" Value="CONNECT" IsKeyword="true" />
    <Terminal Id="Start" Value="START" IsKeyword="true" />
    <Terminal Id="Level" Value="LEVEL" IsKeyword="true" />
    <Terminal Id="NoCycle" Value="NOCYCLE" />

    <!-- Analytic clause -->
    <Terminal Id="Count" Value="COUNT" />
    <Terminal Id="Over" Value="OVER" />
    <Terminal Id="Rows" Value="ROWS" IsKeyword="true" />
    <Terminal Id="Range" Value="RANGE" />
    <Terminal Id="Current" Value="CURRENT" IsKeyword="true" />
    <Terminal Id="Unbounded" Value="UNBOUNDED" />
    <Terminal Id="Preceding" Value="PRECEDING" />
    <Terminal Id="Following" Value="FOLLOWING" />
    <Terminal Id="Row" Value="ROW" IsKeyword="true" />
    <Terminal Id="Ignore" Value="IGNORE" />
    <Terminal Id="Keep" Value="KEEP" />
    <Terminal Id="DenseRank" Value="DENSE_RANK" />

    <!-- Pivot clause -->
    <Terminal Id="Pivot" Value="PIVOT" />
    <Terminal Id="Unpivot" Value="UNPIVOT" />
    <Terminal Id="Xml" Value="XML" />
    <Terminal Id="Include" Value="INCLUDE" />
    <Terminal Id="Exclude" Value="EXCLUDE" />

    <!-- Model clause -->
    <Terminal Id="Model" Value="MODEL" />

    <!-- Oracle 12c specific -->
    <!-- Cross/outer apply clause -->
    <Terminal Id="Apply" Value="APPLY" />

    <!-- Lateral join -->
    <Terminal Id="Lateral" Value="LATERAL" />

    <!-- Flashback period for -->
    <Terminal Id="Period" Value="PERIOD" />

    <!-- Row limiting clause -->
    <Terminal Id="Offset" Value="OFFSET" />
    <Terminal Id="Ties" Value="TIES" />
    <Terminal Id="Next" Value="NEXT" />
    <Terminal Id="Fetch" Value="FETCH" />
    <Terminal Id="Percent" Value="PERCENT" />

    <!-- Subquery factoring search and cycle -->
    <Terminal Id="Cycle" Value="CYCLE" />
    <Terminal Id="Search" Value="SEARCH" />
    <Terminal Id="Depth" Value="DEPTH" />
    <Terminal Id="Breadth" Value="BREADTH" />
    <Terminal Id="To" Value="TO" IsKeyword="true" />
    <Terminal Id="Default" Value="DEFAULT" IsKeyword="true" />

    <!-- Commit -->
    <Terminal Id="Commit" Value="COMMIT" />
    <Terminal Id="Work" Value="WORK" />
    <Terminal Id="Comment" Value="COMMENT" IsKeyword="true" />
    <Terminal Id="Force" Value="FORCE" />
    <Terminal Id="Write" Value="WRITE" />
    <Terminal Id="Immediate" Value="IMMEDIATE" IsKeyword="true" />
    <Terminal Id="Batch" Value="BATCH" />

    <!-- Set Transaction -->
    <Terminal Id="Transaction" Value="TRANSACTION" />
    <Terminal Id="Isolation" Value="ISOLATION" />
    <Terminal Id="Serializable" Value="SERIALIZABLE" />
    <Terminal Id="Committed" Value="COMMITTED" />
    <Terminal Id="Rollback" Value="ROLLBACK" />
    <Terminal Id="Segment" Value="SEGMENT" />
    <Terminal Id="Name" Value="NAME" />
    <Terminal Id="Use" Value="USE" />

    <!-- Update -->
    <Terminal Id="Return" Value="RETURN" />
    <Terminal Id="Returning" Value="RETURNING" />
    <Terminal Id="Into" Value="INTO" IsKeyword="true" />
    <Terminal Id="Log" Value="LOG" />
    <Terminal Id="Errors" Value="ERRORS" />
    <Terminal Id="Reject" Value="REJECT" />
    <Terminal Id="Limit" Value="LIMIT" />
    <Terminal Id="Unlimited" Value="UNLIMITED" />
    <Terminal Id="Value" Value="VALUE" />

    <!-- Delete -->
    <Terminal Id="Delete" Value="DELETE" IsKeyword="true" />
  </Terminals>
  
  <SqlBuildinFunctions>
    <Function Type="Value" Name="NVL">
      <Parameters>
        <Parameter Id="p1" Liability="Mandatory">
          <Types>
            <Type Name="VARCHAR2" />
            <Type Name="NUMBER" />
            <Type Name="CLOB" />
          </Types>
        </Parameter>
        <Parameter Liability="Mandatory">
          <ParameterTypeReference Id="p1" />
        </Parameter>
      </Parameters>
    </Function>
    <Function Type="Value" Name="TO_CHAR">
      <Parameters>
        <Parameter Liability="Mandatory" />
        <Parameter Liability="Optional" />
      </Parameters>
    </Function>
    <Function Type="Value" Name="COALESCE">
      <Parameters MinimumCount="2" MaximumCount="">
      </Parameters>
    </Function>
    <Function Type="Value" Name="ROUND">
      <Parameters>
        <Parameter Liability="Mandatory" />
        <Parameter Liability="Optional" />
      </Parameters>
    </Function>
    <Function Type="Aggregate" Name="COUNT">
      <Parameters>
        <Parameter Liability="Mandatory" AllowAsterisk="true" AllowDistinct="true" />
      </Parameters>
    </Function>
    <Function Type="Analytic" Name="COUNT">
      <Parameters>
        <Parameter Liability="Mandatory" AllowAsterisk="true" AllowDistinct="true" />
      </Parameters>
    </Function>
  </SqlBuildinFunctions>

  <DatabaseTypes>
    <Type Name="CHAR" IsKeyword="true" />
    <Type Name="NCHAR" />
    <Type Name="VARCHAR" IsKeyword="true" />
    <Type Name="NVARCHAR" />
    <Type Name="VARCHAR2" IsKeyword="true" />
    <Type Name="NVARCHAR2" />
    <Type Name="CLOB" />
    <Type Name="BLOB" />
    <Type Name="NUMBER" IsKeyword="true" />
    <Type Name="BINARY_FLOAT" />
    <Type Name="BINARY_DOUBLE" />
    <Type Name="XML_TYPE" />
    <Type Name="BFILE" />
    <Type Name="RAW" IsKeyword="true" />
    <Type Name="DATE" IsKeyword="true" />
    <Type Name="TIMESTAMP" />
    <Type Name="LOCALTIMESTAMP" />
    <Type Name="TIMESTAMP WITH TIMEZONE" />
  </DatabaseTypes>
</SqlGrammar>
