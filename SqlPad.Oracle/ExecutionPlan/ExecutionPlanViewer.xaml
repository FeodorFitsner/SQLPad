<UserControl x:Class="SqlPad.Oracle.ExecutionPlan.ExecutionPlanViewer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sqlPad="clr-namespace:SqlPad;assembly=SqlPad"
             xmlns:executionPlan="clr-namespace:SqlPad.Oracle.ExecutionPlan"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
	<UserControl.Resources>
		<sqlPad:DataSpaceConverter x:Key="DataSpaceConverter" />
		<sqlPad:PrettyPrintIntegerConverter x:Key="PrettyPrintNumericConverter" />
		<sqlPad:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter" />

		<!--<executionPlan:TreeViewLineConverter x:Key="LineConverter"/>-->

		<!-- Toggle Button -->
		<!--<Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToggleButton">
						<Grid Width="15" Height="13" SnapsToDevicePixels="True">
							<Rectangle Width="9" Height="9" Stroke="#919191" SnapsToDevicePixels="true">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="Silver" Offset="0.5"/>
										<GradientStop Color="LightGray" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Rectangle x:Name="ExpandPath" Width="1" Height="5" Stroke="Black" SnapsToDevicePixels="true"/>
							<Rectangle Width="5" Height="1" Stroke="Black" SnapsToDevicePixels="true"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="Visibility"  TargetName="ExpandPath" Value="Collapsed"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>-->

		<!-- TreeViewItem -->
		<!--<Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Padding" Value="1,0,0,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TreeViewItem}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition MinWidth="50" Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition/>
							</Grid.RowDefinitions>

							~1~ Connecting Lines @1@
							<Rectangle x:Name="HorLn" Margin="9,1,0,0" Height="1" Stroke="#DCDCDC" SnapsToDevicePixels="True"/>
							<Rectangle x:Name="VerLn" Width="1" Stroke="#DCDCDC" Margin="0,0,1,0" Grid.RowSpan="2" SnapsToDevicePixels="true" Fill="White"/>
							<ToggleButton Margin="-1,0,0,0" x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
							<Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
								<ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" MinWidth="20"/>
							</Border>
							<ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
						</Grid>
						<ControlTemplate.Triggers>

							~1~ This trigger changes the connecting lines if the item is the last in the list @1@
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
								<Setter TargetName="VerLn" Property="Height" Value="9"/>
								<Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
							</DataTrigger>
							<Trigger Property="IsExpanded" Value="false">
								<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
							</Trigger>
							<Trigger Property="HasItems" Value="false">
								<Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="HasHeader" Value="false"/>
									<Condition Property="Width" Value="Auto"/>
								</MultiTrigger.Conditions>
								<Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="HasHeader" Value="false"/>
									<Condition Property="Height" Value="Auto"/>
								</MultiTrigger.Conditions>
								<Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
							</MultiTrigger>
							<Trigger Property="IsSelected" Value="true">
								<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter TargetName="Bd" Property="Background" Value="LightGray"/>
								<Setter Property="Foreground" Value="White"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>-->
	</UserControl.Resources>
	<TreeView x:Name="Viewer">
		<TreeView.Resources>
			<Style x:Key="PlanItemBaseStyle" TargetType="TextBlock">
				<Style.Setters>
					<Setter Property="FontFamily" Value="Arial"/>
				</Style.Setters>
			</Style>

			<Style x:Key="ItemHeaderBold" TargetType="TextBlock" BasedOn="{StaticResource PlanItemBaseStyle}">
				<Style.Setters>
					<Setter Property="Foreground" Value="DarkBlue"/>
					<Setter Property="FontSize" Value="12"/>
					<Setter Property="FontWeight" Value="Bold"/>
				</Style.Setters>
			</Style>
			<Style x:Key="ColoredItemHeaderBold" TargetType="TextBlock" BasedOn="{StaticResource ItemHeaderBold}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding Operation}" Value="TABLE ACCESS">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red"/>
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="ItemHeader" TargetType="TextBlock" BasedOn="{StaticResource PlanItemBaseStyle}">
				<Style.Setters>
					<Setter Property="Foreground" Value="DarkBlue"/>
					<Setter Property="FontSize" Value="12"/>
				</Style.Setters>
			</Style>
			<Style x:Key="ItemHeaderOther" TargetType="TextBlock" BasedOn="{StaticResource PlanItemBaseStyle}">
				<Style.Setters>
					<Setter Property="FontSize" Value="12"/>
				</Style.Setters>
			</Style>
			<Style x:Key="PlanStatisticValueStyle" TargetType="TextBlock" BasedOn="{StaticResource PlanItemBaseStyle}">
				<Style.Setters>
					<Setter Property="Foreground" Value="DarkRed"/>
					<Setter Property="FontSize" Value="11"/>
				</Style.Setters>
			</Style>
			<Style x:Key="OtherLabelStyle" TargetType="TextBlock" BasedOn="{StaticResource PlanItemBaseStyle}">
				<Style.Setters>
					<Setter Property="FontSize" Value="11"/>
				</Style.Setters>
			</Style>
		</TreeView.Resources>
		
		<TreeView.ItemContainerStyle>
			<Style TargetType="{x:Type TreeViewItem}">
				<Setter Property="IsExpanded" Value="True" />
			</Style>
		</TreeView.ItemContainerStyle>
		
		<TreeView.ItemTemplate>
			<HierarchicalDataTemplate ItemsSource="{Binding ChildItems}">
				<StackPanel>
					<StackPanel Orientation="Horizontal">
						<TextBlock Style="{StaticResource ItemHeaderBold}">
							<Run Text="{Binding ExecutionOrder}"/><Run Text=". "/>
						</TextBlock>
						<TextBlock Style="{StaticResource ColoredItemHeaderBold}">
							<Run Text="{Binding Operation}"/>
							<Run Text=" " />
						</TextBlock>
						<TextBlock Style="{StaticResource ColoredItemHeaderBold}" Visibility="{Binding Options, Converter={StaticResource ObjectToVisibilityConverter}}">
							<Run Text="{Binding Options}"/>
							<Run Text=" "/>
						</TextBlock>
						<TextBlock Style="{StaticResource ItemHeaderBold}" Visibility="{Binding ObjectType, Converter={StaticResource ObjectToVisibilityConverter}}">
							<Run Text="{Binding ObjectType}"/>
							<Run Text=" "/>
						</TextBlock>
						<TextBlock Style="{StaticResource ItemHeader}" Visibility="{Binding Optimizer, Converter={StaticResource ObjectToVisibilityConverter}}">
							<Run Text="{Binding Optimizer}" />
							<Run Text=" "/>
						</TextBlock>
						<TextBlock Style="{StaticResource ItemHeader}" Visibility="{Binding ObjectOwner, Converter={StaticResource ObjectToVisibilityConverter}}">
							<Run Text="{Binding ObjectOwner}" /><Run Text="."/>
						</TextBlock>
						<TextBlock Style="{StaticResource ItemHeader}" Visibility="{Binding ObjectName, Converter={StaticResource ObjectToVisibilityConverter}}">
							<Run Text="{Binding ObjectName}"/>
							<Run Text=" "/>
						</TextBlock>
						<TextBlock Style="{StaticResource ItemHeader}" Visibility="{Binding ObjectAlias, Converter={StaticResource ObjectToVisibilityConverter}}">
							<Run Text="{Binding ObjectAlias}"/>
							<Run Text=" "/>
						</TextBlock>
						<TextBlock Style="{StaticResource ItemHeaderOther}" Visibility="{Binding QueryBlockName, Converter={StaticResource ObjectToVisibilityConverter}}">
							<Run Text="Query Block: "/>
							<Run Text="{Binding QueryBlockName}"/>
						</TextBlock>
					</StackPanel>
					<StackPanel Orientation="Horizontal">
						<TextBlock Style="{StaticResource PlanStatisticValueStyle}" Visibility="{Binding Cost, Converter={StaticResource ObjectToVisibilityConverter}}">
							<Run Text="Cost: "/>
							<Run Text="{Binding Cost, Converter={StaticResource PrettyPrintNumericConverter}}"/>
							<Run Text=" " />
						</TextBlock>
						<TextBlock Style="{StaticResource PlanStatisticValueStyle}" Visibility="{Binding Cardinality, Converter={StaticResource ObjectToVisibilityConverter}}">
							<Run Text="Cardinality: "/>
							<Run Text="{Binding Cardinality, Converter={StaticResource PrettyPrintNumericConverter}}"/>
							<Run Text=" " />
						</TextBlock>
						<TextBlock Style="{StaticResource PlanStatisticValueStyle}" Visibility="{Binding Bytes, Converter={StaticResource ObjectToVisibilityConverter}}">
							<Run Text="Data Volume: "/>
							<Run Text="{Binding Bytes, Converter={StaticResource DataSpaceConverter}}"/>
							<Run Text=" " />
						</TextBlock>
						<TextBlock Style="{StaticResource PlanStatisticValueStyle}" Visibility="{Binding TempSpace, Converter={StaticResource ObjectToVisibilityConverter}}">
							<Run Text="Temp: "/>
							<Run Text="{Binding TempSpace, Converter={StaticResource DataSpaceConverter}}"/>
							<Run Text=" " />
						</TextBlock>
						<TextBlock Style="{StaticResource PlanStatisticValueStyle}" Visibility="{Binding Time, Converter={StaticResource ObjectToVisibilityConverter}}">
							<Run Text="Time: "/>
							<Run Text="{Binding Time}"/>
							<Run Text=" " />
						</TextBlock>
						<TextBlock Style="{StaticResource PlanStatisticValueStyle}" Visibility="{Binding CpuCost, Converter={StaticResource ObjectToVisibilityConverter}}">
							<Run Text="CPU Cost: "/>
							<Run Text="{Binding CpuCost, Converter={StaticResource PrettyPrintNumericConverter}}"/>
							<Run Text=" " />
						</TextBlock>
						<TextBlock Style="{StaticResource PlanStatisticValueStyle}" Visibility="{Binding IoCost, Converter={StaticResource ObjectToVisibilityConverter}}">
							<Run Text="IO Cost: "/>
							<Run Text="{Binding IoCost, Converter={StaticResource PrettyPrintNumericConverter}}"/>
							<Run Text=" " />
						</TextBlock>
					</StackPanel>
					<TextBlock Style="{StaticResource OtherLabelStyle}" Visibility="{Binding AccessPredicates, Converter={StaticResource ObjectToVisibilityConverter}}">
						<Run Text="Access Predicates:"/>
						<Run Text="{Binding AccessPredicates}"/>
					</TextBlock>
					<TextBlock Style="{StaticResource OtherLabelStyle}" Visibility="{Binding FilterPredicates, Converter={StaticResource ObjectToVisibilityConverter}}">
						<Run Text="Filter Predicates:"/>
						<Run Text="{Binding FilterPredicates}"/>
					</TextBlock>
				</StackPanel>
			</HierarchicalDataTemplate>
		</TreeView.ItemTemplate>
	</TreeView>
</UserControl>
