<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SqlPad.Oracle.ToolTips"
    xmlns:sqlPad="clr-namespace:SqlPad;assembly=SqlPad">

	<!-- circular progress bar -->
	<local:StartPointConverter x:Key="StartPointConverter" />
	<local:ArcSizeConverter x:Key="ArcSizeConverter" />
	<local:ArcEndPointConverter x:Key="ArcEndPointConverter" />
	<local:LargeArcConverter x:Key="LargeArcConverter" />
	<local:RotateTransformConverter x:Key="RotateTransformConverter" />
	<local:RotateTransformCentreConverter x:Key="RotateTransformCentreConverter" />

	<Style x:Key="CircularProgressBar" TargetType="{x:Type ProgressBar}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Width" Value="16" />
		<Setter Property="Height" Value="16" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ProgressBar}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="IsIndeterminateStoryboard" TargetName="RotateTransform" TargetProperty="Angle" RepeatBehavior="Forever">
							<DoubleAnimation From="0" To="359" Duration="0:0:2" />
						</Storyboard>
						<Storyboard x:Key="IsFullyIndeterminateScaleStoryboard">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FullyIndeterminateGridScaleTransform" Storyboard.TargetProperty="ScaleX" RepeatBehavior="Forever">
								<SplineDoubleKeyFrame KeyTime="0" Value="0.0" />
								<SplineDoubleKeyFrame KeyTime="0:0:1" Value="1.0" />
								<SplineDoubleKeyFrame KeyTime="0:0:3" Value="0.0" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimation Storyboard.TargetName="RotateTransform" Storyboard.TargetProperty="Angle" RepeatBehavior="Forever" From="00" To="359" Duration="0:0:0.75" />
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid x:Name="TemplateRoot" Background="{TemplateBinding Background}" ClipToBounds="False">
						<Grid x:Name="FullyIndeterminateGrid">
							<Grid.RenderTransform>
								<ScaleTransform x:Name="FullyIndeterminateGridScaleTransform" ScaleX="0" />
							</Grid.RenderTransform>
						</Grid>
						<Grid x:Name="PathGrid" Margin="2" />
						<Canvas>
							<Path x:Name="Path" Stroke="{TemplateBinding Foreground}" StrokeThickness="3" Canvas.Top="2" Canvas.Left="2" RenderTransformOrigin="0, 0">
								<Path.Data>
									<PathGeometry>
										<PathFigure StartPoint="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource StartPointConverter}, Mode=OneWay}">
											<ArcSegment Size="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcSizeConverter}, Mode=OneWay}" SweepDirection="Clockwise">
												<ArcSegment.IsLargeArc>
													<MultiBinding Converter="{StaticResource LargeArcConverter}">
														<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value" />
														<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Minimum" />
														<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Maximum" />
														<Binding ElementName="FullyIndeterminateGridScaleTransform" Path="ScaleX" />
													</MultiBinding>
												</ArcSegment.IsLargeArc>
												<ArcSegment.Point>
													<MultiBinding Converter="{StaticResource ArcEndPointConverter}">
														<Binding ElementName="PathGrid" Path="ActualWidth" />
														<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value" />
														<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Minimum" />
														<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Maximum" />
														<Binding ElementName="FullyIndeterminateGridScaleTransform" Path="ScaleX" />
													</MultiBinding>
												</ArcSegment.Point>
											</ArcSegment>
										</PathFigure>
									</PathGeometry>
								</Path.Data>
								<Path.RenderTransform>
									<TransformGroup>
										<RotateTransform x:Name="RotateTransform"
										                 CenterX="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource RotateTransformCentreConverter}, Mode=OneWay}"
										                 CenterY="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource RotateTransformCentreConverter}, Mode=OneWay}">
											<RotateTransform.Angle>
												<MultiBinding Converter="{StaticResource RotateTransformConverter}">
													<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value" />
													<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Minimum" />
													<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Maximum" />
												</MultiBinding>
											</RotateTransform.Angle>
										</RotateTransform>
									</TransformGroup>
								</Path.RenderTransform>
							</Path>
						</Canvas>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsIndeterminate" Value="True" />
								<Condition Property="IsVisible" Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<!--<RemoveStoryboard BeginStoryboardName="IsFullyIndeterminateStoryboard" />-->
								<BeginStoryboard Storyboard="{StaticResource IsIndeterminateStoryboard}" Name="IsIndeterminateStoryboard" />
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<RemoveStoryboard BeginStoryboardName="IsIndeterminateStoryboard" />
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsIndeterminate" Value="True" />
								<Condition Property="Value" Value="0" />
								<Condition Property="IsVisible" Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<!--<RemoveStoryboard BeginStoryboardName="IsIndeterminateStoryboard" />-->
								<BeginStoryboard Storyboard="{StaticResource IsFullyIndeterminateScaleStoryboard}" Name="IsFullyIndeterminateStoryboard" />
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<RemoveStoryboard BeginStoryboardName="IsFullyIndeterminateStoryboard" />
							</MultiTrigger.ExitActions>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type local:PopupBase}">
		<Style.Resources>
			<sqlPad:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter" />
		</Style.Resources>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:PopupBase}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							
							<StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,-1,-1,0">
								<Button x:Name="ButtonExtractDdl" Command="{x:Static local:PopupBase.ExtractDdlCommand}" Visibility="{TemplateBinding IsExtractDdlVisible, Converter={StaticResource ObjectToVisibilityConverter}}">
									<Button.Style>
										<Style TargetType="Button">
											<Setter Property="Content" Value="DDL" />
											<Setter Property="ToolTip" Value="Extract DDL" />
											<Style.Triggers>
												<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:PopupBase}, Path=IsExtracting}" Value="True">
													<Setter Property="Button.ToolTip" Value="Extracting DDL..." />
													<Setter Property="Button.Content">
														<Setter.Value>
															<ProgressBar IsIndeterminate="True" Foreground="Black" Style="{StaticResource CircularProgressBar}" />
														</Setter.Value>
													</Setter>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Button.Style>
								</Button>
								<Button x:Name="ButtonPin" Content="Pin" Command="{x:Static local:PopupBase.PinPopupCommand}" Visibility="{TemplateBinding IsPinnable, Converter={StaticResource ObjectToVisibilityConverter}}" />
							</StackPanel>

							<ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
								<ContentPresenter />
							</ScrollViewer>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
